<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>hadronw&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://hadronw.com/"/>
  <updated>2018-05-27T13:51:20.228Z</updated>
  <id>http://hadronw.com/</id>
  
  <author>
    <name>hadronw</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Travis CI 自动部署hexo到GitHub/Coding</title>
    <link href="http://hadronw.com/2018/05-27/travis-autodeploy-github-with-coding/"/>
    <id>http://hadronw.com/2018/05-27/travis-autodeploy-github-with-coding/</id>
    <published>2018-05-27T03:09:20.000Z</published>
    <updated>2018-05-27T13:51:20.228Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>同时部署到GitHub、Coding</p></blockquote><p>使用hexo搭建个人blog一年了，体验还不错，但也存在着一些问题。blog的管理、维护对操作环境有一定的要求，必须安装node、hexo、git等环境。</p><p>如果更换了电脑呢？或者说同时想再公司、个人电脑中管理和维护blog呢？</p><a id="more"></a><hr><p>按照剧情的正常发展应该：</p><ul><li>新的电脑中搭建node、hexo、git等环境</li><li>拷贝blog源码到搭建好环境的新电脑中</li><li>使用heox编写blog</li><li>hexo 编译部署到GitHub/Coding</li></ul><p>于是想，能否较少对系统环境的依赖呢？</p><p>首先hexo博客实现的基本流程：本地环境中编写blog，使用hexo命令编译，再通过git上传编译好的文件（非源码）到GitHub或coding中的对应仓库，从而实现blog的管理维护。</p><p>从中可以发现，最关键的就是本地源码了；如果多个环境中操作hexo，每个环境中的blog源码设置、样式不一样，编译上传后还会导致blog发生各种变化。 这样的情况下是不怎么适合多客户端管理、维护blog的。</p><p>要解决的问题就是，既可以便捷的多客户端管理、维护blog，同时又减少blog部署对环境的依赖。</p><hr><p>方便多客户端管理的实现很简单，可以依赖GitHub实现同步协助。</p><p><a href="https://blog.csdn.net/qq_25711251/article/details/72869682" target="_blank" rel="noopener">这21个自动化部署工具，你都知道吗？</a></p><p>Travis CI 便适用于GitHub中使用<a href="https://travis-ci.org/" target="_blank" rel="noopener">Travis CI：https://travis-ci.org/</a> 可以同步到你的GitHub账户，允许自动化测试和部署。</p><p>Travis CI原理：Travis CI会在你每一次提交之后生成一个虚拟机来执行你事先安排好的build任务，你可以调整这个虚拟机的软件环境，甚至能执行sudo来进行apt-get install。</p><p>集成Travis CI用来做什么呢？</p><p>通过Travis CI（Continuous Integration是持续集成的意思）去做hexo 源码编译部署的工作。通过配置文件进行设置，当hexo博客的源码仓库中有改动，触发编译部署命令，去部署hexo，然后再把编译好的文件传入blog的仓库中进行更新。</p><p>这样只需要关注blog源码仓库，不用再管blog的运行仓库。</p><p>本地也不再需要依赖node、hexo-cli等环境了。只需要可以访问GitHub，操作GitHub即可（浏览器也可以操作GitHub的这样调整一下，可以说完全解决了对环境的依赖）。</p><h2 id="Travis-CI-使用"><a href="#Travis-CI-使用" class="headerlink" title="Travis CI 使用"></a>Travis CI 使用</h2><hr><p>GitHub Pages 的博客站点已经搭建成功，并且可以正常访问。如果未搭建或者说无法正常访问，先把GitHub Pages 的博客站点搭建好。 可以搜索GitHub搭建hexo/jeykll博客，或者Coding搭建hexo/jeykll博客</p><p>GitHub Pages默认要求必须使用master分支，所以我们可以在该仓库中新建一个分支（分支名随意如：hexo）用于保存博客的源码文件。编译好的blog文件则放入master分支。</p><p>已经搭建成功的默认是有master分支的，只需要新建一个<code>hexo</code>分支。</p><h3 id="新建仓库hexo分支"><a href="#新建仓库hexo分支" class="headerlink" title="新建仓库hexo分支"></a>新建仓库hexo分支</h3><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 先克隆项目到本地某个空文件夹下</span><br><span class="line">git clone https://github.com/hadronw/hadronw.github.io.git </span><br><span class="line"></span><br><span class="line"># 创建并切换分支 hexo</span><br><span class="line">git checkout -b hexo</span><br></pre></td></tr></table></figure><p><code>hexo</code> 分支是用来存放blog的源码文件的，所以应该把该分支下的文件都删除，再把blog的源文件上传到改分支，再提交到远程仓库hexo分支上。 参考操作如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git rm -rf *    #删除仓库中的文件，可能本地的文件还存有，则需要使用 rm -rf 命令</span><br><span class="line">git commit -m &quot;清空文件夹&quot; #提交删除信息</span><br><span class="line">git push origin hexo:hexo #将删除的信息推送到远程仓库</span><br></pre></td></tr></table></figure><p>再把blog的源文件拷贝到上放的hexo分支对于的文件夹中，再把blog源文件上传到hexo分支上</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add *</span><br><span class="line">git commit -m &quot;提交blog源文件&quot;</span><br><span class="line">git push origin hexo</span><br></pre></td></tr></table></figure><img src="/2018/05-27/travis-autodeploy-github-with-coding/local-sources.png" title="仅供参考，有些文件是没必要的再之后可以把它们删除掉"><img src="/2018/05-27/travis-autodeploy-github-with-coding/hexo-sources.png" title="标号的为本地上传的源文件，删除了一些不必要的"><p>这样GitHub中的仓库就可以看到两个分支：<code>hexo</code>用于存放源文件，<code>master</code>分支用于存放编译后的静态文件</p><p>之后我们更新文章都是提交到指定的hexo分支中，注：一定要提交正确，否则无法展示出来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin hexo  # 参考代码</span><br></pre></td></tr></table></figure><h3 id="Travis-CI-设置"><a href="#Travis-CI-设置" class="headerlink" title="Travis CI 设置"></a>Travis CI 设置</h3><hr><p>进入<a href="https://travis-ci.org/" target="_blank" rel="noopener">Travis 官网</a>，用GitHub账号登陆。登陆成功之后会发现自动关联上了GitHub上的仓库。</p><p>找到你的个人blog对应的仓库即<code>yourname/yourname.github.io</code>，启用项目（点击按钮，启动状态有为绿色）再点击setting进入到仓库的配置页面。</p><p>More option ——》 Settings 进入到仓库的设置页面</p><p>General 栏开启：</p><p><code>Build only if .travis.yml is present</code>——表示“只有当 .travis.yml配置文件 存在时才构建”</p><p><code>Build branch updates</code> —— 表示 “当分支更新时构建” </p><p>其它的选默认选项</p><p>Travis CI在自动构建完成后需要push静态文件到仓库的 master 分支下，而访问GitHub的仓库是需要权限的，下面来看看如何添加GitHub权限</p><h3 id="配置GitHub-Access-Token"><a href="#配置GitHub-Access-Token" class="headerlink" title="配置GitHub Access Token"></a>配置GitHub Access Token</h3><hr><p>GitHub页面，账号Settings ——》Developer Settings ——》Personal access tokens ——》 Generate new token</p><p>点击后提示输入密码后继续，然后来到如下界面，取名字<code>Travis_gh_token 后面的步骤会用到</code>，勾选相关权限选项<code>repo 下全部和 user 下的 user:email 即可</code>。图片如下：</p><img src="/2018/05-27/travis-autodeploy-github-with-coding/GitHub-access-token01.png"><img src="/2018/05-27/travis-autodeploy-github-with-coding/GitHub-access-token02.png"><img src="/2018/05-27/travis-autodeploy-github-with-coding/GitHub-access-token03.png"><p>生成完成后，将该token拷贝下来。</p><p><strong>此token页面只会出现一次，一定要拷贝保存下来，Travis中的配置需要添加</strong>。如果忘记只能重新创建一个</p><h3 id="配置Coding中的Token"><a href="#配置Coding中的Token" class="headerlink" title="配置Coding中的Token"></a>配置Coding中的Token</h3><hr><p>Coding.net 个人账号页面 ——》访问令牌 ——》新建令牌 ——》令牌描述<code>取名为（Travis_co_token）后续的步骤会用到</code> ——》勾选相关权限<code>project:depot 和user.email</code> 如图所示：</p><p>生成完成后，将该token拷贝下来。</p><p><strong>此token页面只会出现一次，一定要拷贝保存下来，Travis中的配置需要添加</strong>。如果忘记只能重新创建一个</p><h3 id="在Travis-CI中配置GitHub、Coding生成的token值"><a href="#在Travis-CI中配置GitHub、Coding生成的token值" class="headerlink" title="在Travis CI中配置GitHub、Coding生成的token值"></a>在Travis CI中配置GitHub、Coding生成的token值</h3><hr><p>将上面获取到的GitHub token添加到<code>Environment Variables</code>部分，值为上文要求保存的token值,而名称即为上面设置的<code>Travis_gh_token</code>(请更改为个人所设置名称)。不勾选后面的 Display value in build log . 否则会在日志文件中暴露你的<code>token</code>信息，而日志文件是公开可见的。</p><p>同样的步骤添加Coding中生成的token值。注意不要添加混乱，如果再后续的构建中出现令牌无效，只需要重新配置一个即可</p><p>至此我们已经配置好了要构建的仓库和访问的token，接下来就是为Travis配置构建了。如何设置触发自动部署，如何部署。</p><img src="/2018/05-27/travis-autodeploy-github-with-coding/travis-toke-setting.png" title="结果如图所示"><h3 id="Travis部署设置"><a href="#Travis部署设置" class="headerlink" title="Travis部署设置"></a>Travis部署设置</h3><hr><p>在hexo分支根目录下创建<code>.travis.yml</code> 配置文件。在之前的步骤中我们勾选了<code>Build only if .travis.yml is present</code>仅当.travis.yml存在时才构建。 只有hexo分支中含有改文件，才会执行构建。该怎么部署的也是在该文件中配置，参考<code>.travis.yml</code>配置文件如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">language:</span> <span class="string">node_js</span> <span class="comment"># 设置语言</span></span><br><span class="line"><span class="attr">node_js:</span> <span class="string">stable</span> <span class="comment"># 设置相应版本</span></span><br><span class="line"><span class="attr">cache:</span></span><br><span class="line"><span class="attr">    apt:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    directories:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">node_modules</span> <span class="comment"># 缓存不经常更改的内容</span></span><br><span class="line"><span class="attr">install:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">npm</span> <span class="string">install</span> <span class="comment"># 安装hexo及插件</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">npm</span> <span class="string">rebuild</span> <span class="string">node-sass</span> <span class="bullet">--force</span> <span class="comment">#该命令是根据构建失败的日志提示添加的</span></span><br><span class="line"><span class="attr">before_install:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">export</span> <span class="string">TZ='Asia/Shanghai'</span> <span class="comment"># 更改时区</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-cli</span> <span class="bullet">-g</span>  <span class="comment"># 安装hexo环境</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">chmod</span> <span class="string">+x</span> <span class="string">./publish-to-gh-pages.sh</span>  <span class="comment"># 为shell文件添加可执行权限</span></span><br><span class="line"><span class="attr">after_script:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">./publish-to-gh-pages.sh</span></span><br><span class="line"><span class="attr">script:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">hexo</span> <span class="string">clean</span> <span class="comment"># 清除</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">hexo</span> <span class="string">g</span> <span class="comment"># 生成</span></span><br><span class="line"><span class="attr">branches:</span></span><br><span class="line"><span class="attr">    only:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">hexo</span> <span class="comment"># 只监测hexo分支</span></span><br><span class="line"><span class="attr">env:</span></span><br><span class="line"><span class="attr">    global:</span></span><br><span class="line">        <span class="comment"># Github Pages</span></span><br><span class="line"><span class="attr">        - GH_REF:</span> <span class="string">github.com/hadronw/hadronw.github.io.git</span> <span class="comment">#设置GH_REF，注意更改成自己的仓库地址</span></span><br><span class="line">        <span class="comment"># Coding Pages https://git.coding.net/hadronw/hadronw.git</span></span><br><span class="line"><span class="attr">        - CO_REF:</span> <span class="string">git.coding.net/hadronw/hadronw.git</span></span><br></pre></td></tr></table></figure><p>辅助配置文件<code>publish-to-gh-pages.sh</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">set</span> -ev</span><br><span class="line">git <span class="built_in">clone</span> https://<span class="variable">$&#123;GH_REF&#125;</span> .deploy_git</span><br><span class="line"><span class="built_in">cd</span> .deploy_git</span><br><span class="line">git checkout master</span><br><span class="line"><span class="built_in">cd</span> ../</span><br><span class="line">mv .deploy_git/.git/ ./public/</span><br><span class="line"><span class="built_in">cd</span> ./public</span><br><span class="line">git config user.name  <span class="string">"hadronw"</span></span><br><span class="line">git config user.email <span class="string">"hadronw@qq.com"</span> </span><br><span class="line"><span class="comment"># add commit timestamp</span></span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">"Travis CI Auto Builder at `date +"</span>%Y-%m-%d %H:%M<span class="string">"`"</span></span><br><span class="line">git push --force --quiet <span class="string">"https://<span class="variable">$&#123;Travis_gh_token&#125;</span>@<span class="variable">$&#123;GH_REF&#125;</span>"</span> master:master</span><br><span class="line">git push --force --quiet <span class="string">"https://hadronw:<span class="variable">$&#123;Travis_co_token&#125;</span>@<span class="variable">$&#123;CO_REF&#125;</span>"</span> master:master</span><br></pre></td></tr></table></figure><p>注意，文中的配置文件仅供参考，对应的名称根据实际换成自己设置的名称。<code>GH_REF</code>表示GitHub上的仓库地址，<code>CO_REF</code>表示Coding上的仓库地址</p><h3 id="上传配置文件及所有源文件开启自动部署"><a href="#上传配置文件及所有源文件开启自动部署" class="headerlink" title="上传配置文件及所有源文件开启自动部署"></a>上传配置文件及所有源文件开启自动部署</h3><hr><p>到此为止，基本上的流程配置已经完成，现在把编写好的配置文件上传到GitHub中仓库hexo分支中。<code>注：同时部署GitHub、Coding等多个仓库时，还是一GitHub为主，travis支持的就是GitHub，所以Coding只是作为辅助仓库用的</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git add *</span><br><span class="line">git add .travis.yml # 注.travis.yml 文件 git add * 命令可能无法添加，所以需要单独再添加一次</span><br><span class="line">git commit -m &quot;提交配置信息及源码&quot;</span><br><span class="line">git push origin hexo # 一定要推送到对应的分支上——hexo 否则会无法触发自动部署</span><br></pre></td></tr></table></figure><p>当我们把文件上传到hexo分支中后<code>.travis.yml配置文件上传后</code>，Travis CI的项目页面会自动监测，如检测到了<code>.travis.yml</code>配置文件后，会根据<code>.travis.yml</code>中的配置文件自动部署项目。</p><p>Travis CI页面中会显示部署的日志，如果部署成功，则可以访问我们的博客了。注意查看日志文件，如果出错了，根据日志文件中的提示修改<code>.travis.yml</code>配置信息</p><hr><p>常见错误：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">remote</span>: Coding 提示: Authentication failed! 认证失败，请确认您输入了正确的账号密码</span><br><span class="line"></span><br><span class="line">检查配置文件，token是否配置正确</span><br></pre></td></tr></table></figure><hr><p>参考链接：</p><p>使用Travis自动部署Hexo到Github与自己的服务器：<a href="https://segmentfault.com/a/1190000009054888" target="_blank" rel="noopener">https://segmentfault.com/a/1190000009054888</a></p><p>使用Travis CI自动部署Hexo： <a href="https://xuanwo.org/2015/02/07/travis-ci-hexo-autodeploy/" target="_blank" rel="noopener">https://xuanwo.org/2015/02/07/travis-ci-hexo-autodeploy/</a></p><p>Hexo 自动部署到 Github：<a href="http://lotabout.me/2016/Hexo-Auto-Deploy-to-Github/" target="_blank" rel="noopener">http://lotabout.me/2016/Hexo-Auto-Deploy-to-Github/</a></p><p>使用 Travis CI 自动部署 Hexo 博客：<a href="https://shawnho.me/2017/11/23/deploy-hexo-blog-with-travis-ci/" target="_blank" rel="noopener">https://shawnho.me/2017/11/23/deploy-hexo-blog-with-travis-ci/</a></p><p>使用Travis CI自动部署Hexo博客：<a href="http://www.itfanr.cc/2017/08/09/using-travis-ci-automatic-deploy-hexo-blogs/" target="_blank" rel="noopener">http://www.itfanr.cc/2017/08/09/using-travis-ci-automatic-deploy-hexo-blogs/</a></p><p>使用travis-ci自动部署Hexo到github和coding: <a href="https://juejin.im/post/5afe61f5f265da0b8d422a3e" target="_blank" rel="noopener">https://juejin.im/post/5afe61f5f265da0b8d422a3e</a></p><p>基于Travis CI实现 Hexo 在 Github 和 Coding 的同步部署: <a href="https://blog.csdn.net/qinyuanpei/article/details/79388983" target="_blank" rel="noopener">https://blog.csdn.net/qinyuanpei/article/details/79388983</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;同时部署到GitHub、Coding&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;使用hexo搭建个人blog一年了，体验还不错，但也存在着一些问题。blog的管理、维护对操作环境有一定的要求，必须安装node、hexo、git等环境。&lt;/p&gt;
&lt;p&gt;如果更换了电脑呢？或者说同时想再公司、个人电脑中管理和维护blog呢？&lt;/p&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://hadronw.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://hadronw.com/tags/hexo/"/>
    
      <category term="travis" scheme="http://hadronw.com/tags/travis/"/>
    
      <category term="coding" scheme="http://hadronw.com/tags/coding/"/>
    
  </entry>
  
  <entry>
    <title>hexo写作的基本语法</title>
    <link href="http://hadronw.com/2018/05-27/hexo%E5%86%99%E4%BD%9C%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
    <id>http://hadronw.com/2018/05-27/hexo写作的基本语法/</id>
    <published>2018-05-26T16:49:26.000Z</published>
    <updated>2018-05-27T13:51:20.220Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>官方文档:<a href="https://hexo.io/zh-cn/docs/writing.html" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/writing.html</a></p></blockquote><h2 id="头部规则的相关设置"><a href="#头部规则的相关设置" class="headerlink" title="头部规则的相关设置"></a>头部规则的相关设置</h2><p>文章中的头部会需要根据规则编写标题、更新时间，标签分类等类容。对读者是不可见的，语法如下：</p><a id="more"></a><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Git添加账号</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2017</span><span class="bullet">-06</span><span class="bullet">-08</span> <span class="number">19</span><span class="string">:49:26</span></span><br><span class="line"><span class="attr">tags:</span>  <span class="string">git</span></span><br><span class="line"><span class="attr">categories:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">comments:</span> <span class="literal">true</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p>解释说明</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Git添加账号</span>   <span class="comment"># 文章标题</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2017</span><span class="bullet">-06</span><span class="bullet">-08</span> <span class="number">19</span><span class="string">:49:26</span>   <span class="comment">#创建时间</span></span><br><span class="line"><span class="attr">tags:</span>  <span class="string">git</span>      <span class="comment"># 文章标签，可使用多个标签</span></span><br><span class="line"><span class="attr">categories:</span> <span class="string">git</span>     <span class="comment">#文章分类目录</span></span><br><span class="line"><span class="attr">comments:</span> <span class="literal">true</span>  <span class="comment"># 是否开启评论功能，注：需要在blog相关配置中添加第三方评论插件</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h2 id="基本规则"><a href="#基本规则" class="headerlink" title="基本规则"></a>基本规则</h2><p>遵循Markdown语法规则，维基百科：<a href="https://zh.wikipedia.org/wiki/Markdown" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/Markdown</a> 中有基本介绍、语法介绍。</p><p>Markdown文档（.md文档）的编辑器：Atom、Mweb（功能强大，喜欢它的页面）、Mou／MacDown（免费，简介容易上手）、Quiver等都支持。</p><h2 id="多个标签的使用"><a href="#多个标签的使用" class="headerlink" title="多个标签的使用"></a>多个标签的使用</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">tages</span>: [标签1,标签2,...标签n]</span><br><span class="line"></span><br><span class="line">或</span><br><span class="line"></span><br><span class="line"><span class="attribute">tages</span>: </span><br><span class="line">- 标签1</span><br><span class="line">- 标签2</span><br><span class="line">...</span><br><span class="line">- 标签n</span><br></pre></td></tr></table></figure><h2 id="图片的使用"><a href="#图片的使用" class="headerlink" title="图片的使用"></a>图片的使用</h2><p><a href="https://hexo.io/zh-cn/docs/tag-plugins.html#Image" target="_blank" rel="noopener">hexo官方使用说明</a></p><p><a href="http://hadronw.com/2017/06-19/hexo%E4%BD%BF%E7%94%A8%E5%9B%BE%E7%89%87/">hexo使用图片</a></p><p>使用网络URL图片地址</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">图片</span>](<span class="link">http://img.ivsky.com/img/bizhi/pre/201804/26/may_2018-012.jpg</span>)</span><br></pre></td></tr></table></figure><p>也可以把自己需要使用的图片上传到云上，生成URL链接，然后再使用（如：七牛）。具体根据自己的情况做决定。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;官方文档:&lt;a href=&quot;https://hexo.io/zh-cn/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://hexo.io/zh-cn/docs/writing.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;头部规则的相关设置&quot;&gt;&lt;a href=&quot;#头部规则的相关设置&quot; class=&quot;headerlink&quot; title=&quot;头部规则的相关设置&quot;&gt;&lt;/a&gt;头部规则的相关设置&lt;/h2&gt;&lt;p&gt;文章中的头部会需要根据规则编写标题、更新时间，标签分类等类容。对读者是不可见的，语法如下：&lt;/p&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://hadronw.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://hadronw.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Vimium的使用</title>
    <link href="http://hadronw.com/2018/05-26/Vimium%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://hadronw.com/2018/05-26/Vimium的使用/</id>
    <published>2018-05-26T04:56:35.000Z</published>
    <updated>2018-05-27T13:51:20.220Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>浏览器中的一款插件，主要用键盘替代鼠标操作浏览器。操作浏览器Chrome</p></blockquote><h2 id="页面滚动"><a href="#页面滚动" class="headerlink" title="页面滚动"></a>页面滚动</h2><p>j   ——》 向下滚动</p><p>k   ——》 向上滚动</p><a id="more"></a><p>h   ——》 向左移动</p><p>i   ——》 向右移动</p><p>gg  ——》 向上滚动到顶端</p><p>G   ——》 向下滚动到末尾</p><p>d   ——》 向下翻一页</p><p>u   ——》 向上翻一页</p><p>r   ——》 刷新页面</p><h2 id="tab——标签页"><a href="#tab——标签页" class="headerlink" title="tab——标签页"></a>tab——标签页</h2><p>K   ——》切换到右一个标签</p><p>J   ——》切换到左一个标签</p><p>g0  ——》去第一个标签</p><p><code>g$</code>  ——》去第<code>$</code>g个标签页</p><p>t   ——》创建一个新标签页（ctrl+t）</p><p>yy  ——》copy当前页面url Copy the current URL to the clipboard</p><p>gs  ——》查看网页源码 View page source</p><p>yf  ——》拷贝当前页面的连接到剪切板 Copy a link URL to the clipboard</p><p>yt  ——》创建当前页面的一个副本(copy当前路径在新Tab中打开)-Duplicate current tab</p><p>YT  ——》罗列出当前所有Tab页(并提供索引)，可任你选择性跳转</p><p>p   ——》在当前标签页中打开剪切板中的链接 Open the clipboard’s URL in the current tab</p><p>P   ——》在新的标签页中打开剪切板中的链接Open the clipboard’s URL in a new tab</p><p>gu  ——》Go up the URL hierarchy 回到当前页的主页</p><p>gU  ——》Go to root of current URL hierarchy 回到当前页面的根页面</p><p>f   ——》 按f键后，当前页面上所有链接上都会出现键盘符号，再按不同的按键，在当前页面打开按键对应的链接</p><p>F   ——》 功能同f键一样，只是在新的标签页打开链接</p><h2 id="历史记录-书签"><a href="#历史记录-书签" class="headerlink" title="历史记录/书签"></a>历史记录/书签</h2><p>o   ——》 在当前页面中打开URL，书签和历史记录 Open URL, bookmark, or history entry</p><p>O   ——》 在新标签页中打开URL，书签和历史记录Open URL, bookmark, history entry, in a new tab</p><p>b   ——》 打开书签 Open a bookmark</p><p>B   ——》 在新标签中打开书签 Open a bookmark in a new tab<br>在命令行模式，按下b(B)，可以对标签进行检索，检索结果通过tab键进行选择，回车即可打开标签</p><h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><p>T   ——》 搜索打开的标签页 Search through your open tabs</p><p>/   ——》查找（ctrl+f）</p><p>i   ——》 进入输入模式 Enter insert mode</p><p>esc ——》 退出</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;浏览器中的一款插件，主要用键盘替代鼠标操作浏览器。操作浏览器Chrome&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;页面滚动&quot;&gt;&lt;a href=&quot;#页面滚动&quot; class=&quot;headerlink&quot; title=&quot;页面滚动&quot;&gt;&lt;/a&gt;页面滚动&lt;/h2&gt;&lt;p&gt;j   ——》 向下滚动&lt;/p&gt;
&lt;p&gt;k   ——》 向上滚动&lt;/p&gt;
    
    </summary>
    
      <category term="Chrome" scheme="http://hadronw.com/categories/Chrome/"/>
    
    
      <category term="Mac" scheme="http://hadronw.com/tags/Mac/"/>
    
      <category term="Chrome" scheme="http://hadronw.com/tags/Chrome/"/>
    
  </entry>
  
  <entry>
    <title>blog 更改主题</title>
    <link href="http://hadronw.com/2018/05-25/blog-%E6%9B%B4%E6%94%B9%E4%B8%BB%E9%A2%98/"/>
    <id>http://hadronw.com/2018/05-25/blog-更改主题/</id>
    <published>2018-05-25T04:56:35.000Z</published>
    <updated>2018-05-27T13:51:20.220Z</updated>
    
    <content type="html"><![CDATA[<p>今天花了点时间把blog的主题更改了一下。之前用的是Next的主题，有好些功能都用不到。所以换了一个简单一点的，暖颜色的。</p><p>记录一下看着不错的主题</p><h2 id="简约型的"><a href="#简约型的" class="headerlink" title="简约型的"></a>简约型的</h2><p><a href="https://github.com/ahonn/hexo-theme-even" target="_blank" rel="noopener">hexo-theme-even</a></p><a id="more"></a><p><a href="https://github.com/CodeDaraW/Hacker" target="_blank" rel="noopener">Hacker</a></p><p><a href="https://github.com/luuman/hexo-theme-spfk" target="_blank" rel="noopener">spfk</a></p><p><a href="https://github.com/Haojen/hexo-theme-Anisina" target="_blank" rel="noopener">Haojen</a></p><h2 id="hexo官方主题聚集处"><a href="#hexo官方主题聚集处" class="headerlink" title="hexo官方主题聚集处"></a>hexo官方主题聚集处</h2><p><a href="https://hexo.io/themes/" target="_blank" rel="noopener">hexo主题大全</a></p><h2 id="功能强大的Next"><a href="#功能强大的Next" class="headerlink" title="功能强大的Next"></a>功能强大的Next</h2><p><a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">Next</a></p><h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><p><a href="http://chaoo.oschina.io/2016/12/29/BlueLake%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E7%9A%84%E8%AF%A6%E7%BB%86%E9%85%8D%E7%BD%AE.html" target="_blank" rel="noopener">BlueLake博客主题的详细配置</a></p><p><a href="https://thief.one/2017/03/03/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/" target="_blank" rel="noopener">Hexo搭建博客教程</a></p><p><a href="https://linghucong.js.org/2016/04/15/2016-04-15-hexo-github-pages-blog/" target="_blank" rel="noopener">手把手教你使用Hexo + Github Pages搭建个人独立博客</a></p><p><a href="http://fengdi.org/2017/08/10/Hexo%E5%8D%9A%E5%AE%A2%E6%8F%90%E4%BA%A4%E7%99%BE%E5%BA%A6%E5%92%8CGoogle%E6%94%B6%E5%BD%95.html" target="_blank" rel="noopener">Hexo博客提交百度和Google收录</a></p><p><a href="http://www.franktly.com/2016/07/06/%E8%AE%A9Baidu%E5%92%8CGoogle%E6%94%B6%E5%BD%95Hexo%E5%8D%9A%E5%AE%A2/" target="_blank" rel="noopener">让Baidu和Google收录Hexo博客</a></p><p><a href="http://fengdi.org/2017/08/07/Hexo%E5%8D%9A%E5%AE%A2%E4%B9%8B%E9%80%9F%E5%BA%A6%E4%BC%98%E5%8C%96.html" target="_blank" rel="noopener">Hexo博客之速度优化</a></p><h2 id="博客的第三方功能"><a href="#博客的第三方功能" class="headerlink" title="博客的第三方功能"></a>博客的第三方功能</h2><p>评论插件——<a href="https://disqus.com/" target="_blank" rel="noopener">Disqus国外的需要翻墙才能使用</a>、<a href="http://changyan.kuaizhan.com/" target="_blank" rel="noopener">畅言国内</a>、<a href="https://livere.com/" target="_blank" rel="noopener">来比力</a></p><p>百度站长：<a href="https://zhanzhang.baidu.com/" target="_blank" rel="noopener">https://zhanzhang.baidu.com/</a></p><p>百度统计: <a href="https://tongji.baidu.com/" target="_blank" rel="noopener">https://tongji.baidu.com/</a></p><p>Google Analytics： <a href="https://www.google.com/analytics/" target="_blank" rel="noopener">https://www.google.com/analytics/</a> </p><p>Google 站长: <a href="https://www.google.com/webmasters/verification/home?hl=zh-CN" target="_blank" rel="noopener">https://www.google.com/webmasters/verification/home?hl=zh-CN</a></p><p>文章统计leancloud :  <a href="https://leancloud.cn/" target="_blank" rel="noopener">https://leancloud.cn/</a></p><p>注意：一般主题中都留有常见第三方key、id之类的输入口，找到之后将内容填上即可</p><h2 id="hexo中多个标签的使用"><a href="#hexo中多个标签的使用" class="headerlink" title="hexo中多个标签的使用"></a>hexo中多个标签的使用</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">tages</span>: [标签1,标签2,...标签n]</span><br><span class="line"></span><br><span class="line">或</span><br><span class="line"></span><br><span class="line"><span class="attribute">tages</span>: </span><br><span class="line">- 标签1</span><br><span class="line">- 标签2</span><br><span class="line">...</span><br><span class="line">- 标签n</span><br></pre></td></tr></table></figure><p>检查，部署一下是否成功</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天花了点时间把blog的主题更改了一下。之前用的是Next的主题，有好些功能都用不到。所以换了一个简单一点的，暖颜色的。&lt;/p&gt;
&lt;p&gt;记录一下看着不错的主题&lt;/p&gt;
&lt;h2 id=&quot;简约型的&quot;&gt;&lt;a href=&quot;#简约型的&quot; class=&quot;headerlink&quot; title=&quot;简约型的&quot;&gt;&lt;/a&gt;简约型的&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/ahonn/hexo-theme-even&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;hexo-theme-even&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://hadronw.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://hadronw.com/tags/hexo/"/>
    
      <category term="blog" scheme="http://hadronw.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Mac中好用的软件</title>
    <link href="http://hadronw.com/2018/05-25/Mac%E4%B8%AD%E5%A5%BD%E7%94%A8%E7%9A%84%E8%BD%AF%E4%BB%B6/"/>
    <id>http://hadronw.com/2018/05-25/Mac中好用的软件/</id>
    <published>2018-05-25T01:07:11.000Z</published>
    <updated>2018-05-27T13:51:20.188Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Mac中的软件"><a href="#Mac中的软件" class="headerlink" title="Mac中的软件"></a>Mac中的软件</h2><hr><p><a href="https://hadronw.com/2017/06-11/Mac%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6/">Mac常用软件</a></p><p>上文已经有了部分的软件，本篇是记录后续添加的</p><h3 id="系统辅助工具类"><a href="#系统辅助工具类" class="headerlink" title="系统辅助工具类"></a>系统辅助工具类</h3><p><strong><a href="https://github.com/shadowsocks/ShadowsocksX-NG/releases" target="_blank" rel="noopener">ShadowsocksX-NG</a></strong></p><a id="more"></a><p>上网辅助工具，Shadowsocks改进类</p><p><strong><a href="https://github.com/dingmingxin/GhostSKB" target="_blank" rel="noopener">GhostSKB</a></strong></p><p>切换App时自动切换设置好的输入法</p><p><strong><a href="https://kapeli.com/dash" target="_blank" rel="noopener">Dash</a></strong></p><p>文档查看神器，开发人员的好辅助</p><p><strong><a href="http://magnet.crowdcafe.com/" target="_blank" rel="noopener">Magnet</a></strong></p><p>窗口控制器，快捷键来回移动切换窗口视图</p><p><strong><a href="http://jietu.qq.com/" target="_blank" rel="noopener">JieTu</a></strong></p><p>截图工具（截屏、录屏、识别），腾讯出品。有了它可以把QQ/微信等软件自带的截图给取消掉</p><p><strong><a href="https://pasteapp.me/" target="_blank" rel="noopener">Paste</a></strong></p><p>剪切板增强管理工具，Alfred也带有剪切板功能但似乎存储的数据有限</p><p><strong><a href="https://www.macbartender.com/" target="_blank" rel="noopener">Bartender</a></strong></p><p>菜单栏图标管理工具，可以设置图标隐藏显示</p><p><strong><a href="https://matthewpalmer.net/vanilla/" target="_blank" rel="noopener">Vanilla</a></strong></p><p>Bartender同类型工具，使用比Bartender简单</p><p><strong><a href="https://plumamazing.com/product/tinycal/" target="_blank" rel="noopener">TinyCal</a></strong></p><p>日历小软件，点击图标弹出日期表，可以显示农历</p><p><strong><a href="https://oldj.github.io/SwitchHosts/#cn" target="_blank" rel="noopener">SwitchHosts</a></strong></p><p>是一个管理、切换多个 hosts 方案的工具。</p><p>它是一个免费开源软件</p><p><strong>Bandwidth+</strong></p><p>统计Mac的流量，显示网速</p><h3 id="编辑类"><a href="#编辑类" class="headerlink" title="编辑类"></a>编辑类</h3><p><strong><a href="https://www.sublimetext.com/" target="_blank" rel="noopener">Sublime Text</a></strong></p><p>是一款商业化的Mac文本编辑器。但是，它提供了一个不限时的评估版本，使之在实践中是免费的。</p><p>Sublime Text拥有超级友好的界面，有22种不同的主题可供选择。在其众多有趣功能当中有一项被称为免分心模式，在该模式下，屏幕中心只包含文本。</p><p>其他的功能包括建立在简单的JSON文件基础之上的高级定制功能；以及分割编辑，也即编辑能够在两个不同的文件或一个文件的不同部分之间完成。</p><p><strong><a href="http://zh.mweb.im/" target="_blank" rel="noopener">MWeb</a></strong></p><p>markdown文本编辑器（收费），比Mou／MacDown等免费产品功能要多，主要颜值看着舒服</p><p><strong><a href="https://www.activestate.com/komodo-edit" target="_blank" rel="noopener">Komodo Edit</a></strong></p><p>是一款开放源代码的免费Mac版文本编辑器，用户界面十分友好，无论是编写代码还是进行其他编辑都十分便捷。这款应用拥有若干有用的编辑工具，如追踪更改，自动完成，多节，皮肤和图标设置，以及减码查看器</p><p><strong><a href="http://brackets.io/" target="_blank" rel="noopener">Brackets</a></strong></p><p>是一款开放源代码的免费文本编辑器，最初由Adobe Systems予以创建，目前在GitHub上进行维护。它自从2014年开始提供给用户使用并且定期进行更新。此Mac版文本编辑器以HTML，CSS和JavaScript进行编写。它是跨平台的网页开发软件。</p><p><strong><a href="http://www.ultraedit.cn/" target="_blank" rel="noopener">UltraEdit</a></strong></p><p>UltraEdit的突出之处在于其功能的多重性，这些功能对于开发非常有帮助。这些功能包括很多编辑工具，如通过宏和脚本自动控制，可配置语法高亮显示，代码折叠，文件类型转换，正规表达式的寻找和替换，列编辑模式，统一码和十六进制编辑模式。UltraEdit不仅功能十分强大，其API界面的表现也是可圈可点</p><p><strong><a href="https://atom.io/" target="_blank" rel="noopener">Atom</a></strong></p><p>是一款免费且开源的文本编辑器，github出品。以Node.js进行编写，并嵌于GitControl中。它可以作为单纯的Mac文本编辑器使用，也可以作为源代码编辑器来使用。通过插件程序的使用，此应用支持很多语言，如HTML, CSS, C/C++, Objective-C, Java, Go, C#, JavaScript, Python, PHP, Perl, XML, Mustache, Clojure, Ruby等等，使之成为了现代开发人员的有用工具。</p><h3 id="远程类工具"><a href="#远程类工具" class="headerlink" title="远程类工具"></a>远程类工具</h3><p><strong><a href="https://www.teamviewer.com/zhcn/" target="_blank" rel="noopener">TeamViewer</a></strong></p><p>远程支持、远程访问、在线协作和会议</p><p><strong><a href="https://www.airdroid.com/zh-cn/get.html" target="_blank" rel="noopener">AirDroid</a></strong></p><p>多平台互通工具，PC操控Android，Android中的电话、短信等通知在PC中显示。Android投屏到PC</p><h2 id="Chrome中好用的插件"><a href="#Chrome中好用的插件" class="headerlink" title="Chrome中好用的插件"></a>Chrome中好用的插件</h2><hr><p><strong>Adblock Plus</strong>：  Adblock Plus 是超过 5 亿次下载的全球最受欢迎的广告拦截软件之一</p><p><strong>广告终结者</strong>： 清除网页上的所有广告：浮动广告，购物广告，恶意弹窗，跟踪代码，视频广告。让你浏览网页更快更清爽。广告终结者，你唯一需要的广告插件</p><p><strong>Evernote Web Clipper</strong>： 印象笔记剪藏工具</p><p><strong>Octotree</strong>： github中tree的形式显示文件目录</p><p><strong>Proxy SwitchyOmega</strong>： 轻松快捷地管理和切换多个代理设置</p><p><strong>Tampermonkey</strong>： 油猴，脚本管理工具</p><p><strong>Vimium</strong>： 键盘操作浏览器</p><p><strong>捕捉网页截图 - FireShot的</strong>： 捕捉网页截图，编辑并将它们保存为PDF，JPEG，GIF，PNG或BMP；上传，打印，在Photoshop中打开，复制到剪贴板或电子邮件</p><p><strong>有道云笔记网页剪报</strong>： 有到云笔记剪藏工具，一键保存精彩网页，多终端同步，永久珍藏</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Mac中的软件&quot;&gt;&lt;a href=&quot;#Mac中的软件&quot; class=&quot;headerlink&quot; title=&quot;Mac中的软件&quot;&gt;&lt;/a&gt;Mac中的软件&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://hadronw.com/2017/06-11/Mac%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6/&quot;&gt;Mac常用软件&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;上文已经有了部分的软件，本篇是记录后续添加的&lt;/p&gt;
&lt;h3 id=&quot;系统辅助工具类&quot;&gt;&lt;a href=&quot;#系统辅助工具类&quot; class=&quot;headerlink&quot; title=&quot;系统辅助工具类&quot;&gt;&lt;/a&gt;系统辅助工具类&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/shadowsocks/ShadowsocksX-NG/releases&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ShadowsocksX-NG&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Mac" scheme="http://hadronw.com/categories/Mac/"/>
    
    
      <category term="Mac" scheme="http://hadronw.com/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>Hue的安装与使用</title>
    <link href="http://hadronw.com/2018/05-24/Hue%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
    <id>http://hadronw.com/2018/05-24/Hue的安装与使用/</id>
    <published>2018-05-24T13:07:43.000Z</published>
    <updated>2018-05-27T13:51:20.152Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>hue 3.9</p></blockquote><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Hue是Cloudera开源的一个Hadoop UI，由Cloudera Desktop演化而来。面向用户提供方便的UI用于平时的Hadoop操作中。Apache Ambari面向的是管理员，用于安装、维护集群，而不是使用集群。两者针对的是不同需求</p><a id="more"></a><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><hr><p>hue官方文档：<a href="http://cloudera.github.io/hue/latest/admin-manual/manual.html#installation" target="_blank" rel="noopener">http://cloudera.github.io/hue/latest/admin-manual/manual.html#installation</a></p><p>hue github 仓库地址：<a href="https://github.com/cloudera/hue" target="_blank" rel="noopener">https://github.com/cloudera/hue</a></p><h3 id="Maven-amp-Ant的安装配置"><a href="#Maven-amp-Ant的安装配置" class="headerlink" title="Maven &amp; Ant的安装配置"></a>Maven &amp; Ant的安装配置</h3><p><a href="https://hadronw.com/2018/04-22/Linux%E4%B8%AD%E5%AE%89%E8%A3%85Maven-Ant/">Linux中安装Maven &amp; Ant</a></p><h3 id="依赖安装"><a href="#依赖安装" class="headerlink" title="依赖安装"></a>依赖安装</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -<span class="keyword">y</span> install ant asciidoc cyrus-sasl-devel cyrus-sasl-gssapi cyrus-sasl-plain gcc gcc-<span class="keyword">c</span>++ krb5-devel libffi-devel libxml2-devel libxslt-devel <span class="keyword">make</span>  mysql mysql-devel openldap-devel <span class="keyword">python</span>-devel sqlite-devel gmp-devel</span><br></pre></td></tr></table></figure><p>注：以上命令可依次安装，Linux可正常连接网络</p><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>hue cdh5版下载<a href="http://archive.cloudera.com/cdh5/cdh/5/" target="_blank" rel="noopener">http://archive.cloudera.com/cdh5/cdh/5/</a><br>注：选择下载与自己使用Hadoop 生态包相匹配的包。CDH版的不同版本生态包做过适配处理，减少不同安装包版本冲突。</p><p>将hue-3.9.0-cdh5.10.1.tar.gz 下载到 /opt/soft 目录下 </p><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><h4 id="解压安装包"><a href="#解压安装包" class="headerlink" title="解压安装包"></a>解压安装包</h4><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@test soft]# tar zxvf hue<span class="number">-3.9</span><span class="number">.0</span>-cdh5<span class="number">.10</span><span class="number">.1</span>.tar.gz -C ../modules</span><br></pre></td></tr></table></figure><p>将解压到/opt/modules 目录下</p><h4 id="编译源码包"><a href="#编译源码包" class="headerlink" title="编译源码包"></a>编译源码包</h4><p>cd /opt/modules/hue-3.9.0-cdh5.10.1</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@test hue<span class="number">-3.9</span><span class="number">.0</span>-cdh5<span class="number">.10</span><span class="number">.1</span>]# make apps</span><br></pre></td></tr></table></figure><p>编译会需要一段时间,编译速度取决于网速。此阶段没有出错就表明安装成功</p><p>/opt/modules/zookeeper-3.4.5/bin/zkServer.sh start</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="hue"><a href="#hue" class="headerlink" title="hue"></a>hue</h3><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">secret_key=jFE93j;2[290-eiw.KEiwN2s3['d;/.q[eIW^y<span class="comment">#e=+Iei*@Mn&lt;qW5o</span></span><br><span class="line">http_host=0.0.0.0</span><br><span class="line">http_port=8888</span><br><span class="line">server_user=root</span><br><span class="line">server_group=root</span><br><span class="line">default_user=root</span><br><span class="line">default_hdfs_superuser=root</span><br></pre></td></tr></table></figure><h3 id="hdfs"><a href="#hdfs" class="headerlink" title="hdfs"></a>hdfs</h3><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fs_defaultfs=<span class="string">hdfs:</span><span class="comment">//master:9000</span></span><br><span class="line">webhdfs_url=<span class="string">http:</span><span class="comment">//master:50070/webhdfs/v1</span></span><br><span class="line">hadoop_conf_dir=<span class="regexp">/home/</span>hadoop<span class="number">-2.6</span><span class="number">.0</span><span class="regexp">/etc/</span>hadoop</span><br></pre></td></tr></table></figure><h3 id="yarn"><a href="#yarn" class="headerlink" title="yarn"></a>yarn</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">resourcemanager_host</span>=master</span><br><span class="line"><span class="attr">resourcemanager_port</span>=<span class="number">8032</span></span><br><span class="line"><span class="attr">resourcemanager_api_url</span>=http://master:<span class="number">8088</span></span><br><span class="line"><span class="attr">proxy_api_url</span>=http://master:<span class="number">8088</span></span><br><span class="line"><span class="attr">history_server_api_url</span>=http://master:<span class="number">19888</span></span><br></pre></td></tr></table></figure><h3 id="修改时区"><a href="#修改时区" class="headerlink" title="修改时区"></a>修改时区</h3><p>hue 的默认时区是American/LosAngeles，需要把timezone修改成Asia/Shanghai</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">time_zone</span> = Asia/Shanghai</span><br></pre></td></tr></table></figure><h3 id="hive"><a href="#hive" class="headerlink" title="hive"></a>hive</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">hive_server_host</span>=master</span><br><span class="line"><span class="attr">hive_server_port</span>=<span class="number">10000</span></span><br><span class="line"><span class="attr">hive_conf_dir</span>=/opt/hive-<span class="number">2.0</span>.<span class="number">0</span>/conf</span><br></pre></td></tr></table></figure><h3 id="hbase"><a href="#hbase" class="headerlink" title="hbase"></a>hbase</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hbase_clusters=(Cluster|master:9090)</span><br><span class="line">hbase_conf_dir=/opt/hbase-1.2.2/conf</span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">build<span class="meta-keyword">/env/</span>bin/supervisor            <span class="comment">//启动命令-session关闭后，进程会结束</span></span><br><span class="line">nohup build<span class="meta-keyword">/env/</span>bin/supervisor &amp;    <span class="comment">//后台启动 session关闭后，进程不会结束</span></span><br></pre></td></tr></table></figure><h3 id="hue管理页面"><a href="#hue管理页面" class="headerlink" title="hue管理页面"></a>hue管理页面</h3><p>访问地址：<a href="http://master:8888" target="_blank" rel="noopener">http://master:8888</a>  主机名+端口名</p><h3 id="hive使用"><a href="#hive使用" class="headerlink" title="hive使用"></a>hive使用</h3><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup bin/hiveserver2 <span class="meta">&amp; <span class="comment">//启动</span></span></span><br></pre></td></tr></table></figure><h3 id="hbase的使用"><a href="#hbase的使用" class="headerlink" title="hbase的使用"></a>hbase的使用</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">bin/start-hbase.sh</span><br><span class="line">bin/hbase-daemon<span class="selector-class">.sh</span> start thrift</span><br><span class="line"></span><br><span class="line">bin/hbase-daemon<span class="selector-class">.sh</span> stop thrift</span><br><span class="line"></span><br><span class="line">hbase thrift -<span class="selector-tag">p</span> <span class="number">9090</span></span><br></pre></td></tr></table></figure><p>之后就可以打开hueUI页面进入到hbase中</p><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="缺少hue用户"><a href="#缺少hue用户" class="headerlink" title="缺少hue用户"></a>缺少hue用户</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">KeyError: &quot;Couldn&apos;t get user id for user hue&quot; #27</span><br></pre></td></tr></table></figure><p>需要创建一个hue用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adduser hue</span><br></pre></td></tr></table></figure><h3 id="SecurityException"><a href="#SecurityException" class="headerlink" title="SecurityException"></a>SecurityException</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WebHdfsException: SecurityException: Failed to obtain user group information: org.apache.hadoop.security.authorize.AuthorizationException: User: root is not allowed to impersonate root (error 403)</span><br></pre></td></tr></table></figure><p>hue没用权限访问hdfs文件管理，hue中的root用户没有hdfs访问权限</p><p>启动hue设置的用户是与hdfs中的用户是区开的，想要有权限可以访问hdfs中需要在Hadoop中的配置文件中添加用户配置。</p><p>在Hadoop中的core-site.xml 中添加hue中的用户</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.proxyuser.root.hosts<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>*<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.proxyuser.root.groups<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>*<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这个用户配置可以添加多个[可以同时配置hue、root、hadoop]，如果hue启动之后设置的默认用户是<code>hue</code>，则把以上代码中的配置<code>root</code> 改成<code>hue</code></p><p>注意一下安装使用的用户，有些问题是用户权限问题导致的</p><p>参考链接：</p><p><a href="https://www.zybuluo.com/BrandonLin/note/456756" target="_blank" rel="noopener">https://www.zybuluo.com/BrandonLin/note/456756</a></p><p><a href="https://blog.csdn.net/m0_37739193/article/details/77963240" target="_blank" rel="noopener">https://blog.csdn.net/m0_37739193/article/details/77963240</a></p><p><a href="https://blog.csdn.net/feinifi/article/details/79418246" target="_blank" rel="noopener">https://blog.csdn.net/feinifi/article/details/79418246</a></p><p><a href="http://www.cnblogs.com/zlslch/p/6819622.html" target="_blank" rel="noopener">http://www.cnblogs.com/zlslch/p/6819622.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;hue 3.9&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;Hue是Cloudera开源的一个Hadoop UI，由Cloudera Desktop演化而来。面向用户提供方便的UI用于平时的Hadoop操作中。Apache Ambari面向的是管理员，用于安装、维护集群，而不是使用集群。两者针对的是不同需求&lt;/p&gt;
    
    </summary>
    
      <category term="Hadoop" scheme="http://hadronw.com/categories/Hadoop/"/>
    
    
      <category term="hue" scheme="http://hadronw.com/tags/hue/"/>
    
  </entry>
  
  <entry>
    <title>vi/vim 常用命令</title>
    <link href="http://hadronw.com/2018/05-04/vi-vim-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://hadronw.com/2018/05-04/vi-vim-常用命令/</id>
    <published>2018-05-04T04:31:27.000Z</published>
    <updated>2018-05-27T13:51:20.240Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>切换命令需先按ESC键</strong></p></blockquote><h2 id="编辑-插入-模式"><a href="#编辑-插入-模式" class="headerlink" title="编辑(插入)模式"></a>编辑(插入)模式</h2><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">i         =&gt; 插入光标前一个字符</span><br><span class="line"></span><br><span class="line">I         =&gt; 插入行首</span><br><span class="line"></span><br><span class="line">a         =&gt; 插入光标后一个字符</span><br><span class="line"></span><br><span class="line">A         =&gt; 插入行末</span><br><span class="line"></span><br><span class="line">o         =&gt; 向下新开一行，插入行首</span><br><span class="line"></span><br><span class="line">O         =&gt; 向上新开一行，插入行首</span><br></pre></td></tr></table></figure><h2 id="移动光标"><a href="#移动光标" class="headerlink" title="移动光标"></a>移动光标</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">h         =&gt; 左移</span><br><span class="line"></span><br><span class="line">j         =&gt; 下移</span><br><span class="line"></span><br><span class="line">k         =&gt; 上移</span><br><span class="line"></span><br><span class="line">l         =&gt; 右移</span><br><span class="line"></span><br><span class="line">M         =&gt; 光标移动到中间行</span><br><span class="line"></span><br><span class="line">L         =&gt; 光标移动到屏幕最后一行行首</span><br><span class="line"></span><br><span class="line">G         =&gt; 移动到指定行，行号 -G</span><br><span class="line"></span><br><span class="line">w         =&gt; 向后一次移动一个字</span><br><span class="line"></span><br><span class="line">b         =&gt; 向前一次移动一个字</span><br><span class="line"></span><br><span class="line">0         =&gt; 数字零，到本行头</span><br><span class="line"></span><br><span class="line">$         =&gt; 到本行行尾</span><br><span class="line"></span><br><span class="line">&#123;         =&gt; 按段移动，上移</span><br><span class="line"></span><br><span class="line">&#125;         =&gt; 按段移动，下移</span><br><span class="line"></span><br><span class="line">ctrl+d    =&gt; 向下翻半屏</span><br><span class="line"></span><br><span class="line">ctrl+u    =&gt; 向上翻半屏</span><br><span class="line"></span><br><span class="line">ctrl+f    =&gt; 向下翻一屏</span><br><span class="line"></span><br><span class="line">ctrl+b    =&gt; 向上翻一屏</span><br><span class="line"></span><br><span class="line">gg        =&gt; 光标移动到文件开头</span><br><span class="line"></span><br><span class="line">G         =&gt; 光标移动到文件末尾</span><br></pre></td></tr></table></figure><h2 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">x         =&gt; 删除光标后一个字符,相当于 Del </span><br><span class="line"></span><br><span class="line">X         =&gt; 删除光标前一个字符,相当于 Backspace</span><br><span class="line"></span><br><span class="line">dd        =&gt; 删除光标所在行,n dd 删除指定的行数 D: 删除光标后本行所有内容,包含光标所在字符 </span><br><span class="line"></span><br><span class="line">d0        =&gt; 删除光标前本行所有内容,不包含光标所在字符</span><br><span class="line"></span><br><span class="line">dw        =&gt; 删除光标开始位置的字,包含光标所在字符</span><br><span class="line"></span><br><span class="line">：.,$-1d  =&gt;  删除光标行到最后一行之间的内容</span><br></pre></td></tr></table></figure><h2 id="撤销命令"><a href="#撤销命令" class="headerlink" title="撤销命令"></a>撤销命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">u         =&gt; 一步一步撤销 </span><br><span class="line"></span><br><span class="line">Ctr+r     =&gt; 反撤销</span><br></pre></td></tr></table></figure><h2 id="文本行移动"><a href="#文本行移动" class="headerlink" title="文本行移动"></a>文本行移动</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;        =&gt; 文本行右移 </span><br><span class="line"></span><br><span class="line">&lt;&lt;        =&gt; 文本行左移</span><br></pre></td></tr></table></figure><h2 id="复制粘贴"><a href="#复制粘贴" class="headerlink" title="复制粘贴"></a>复制粘贴</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yy        =&gt; 复制当前行,n yy 复制 n 行 </span><br><span class="line"></span><br><span class="line">p         =&gt; 在光标所在位置向下新开辟一行,粘贴</span><br></pre></td></tr></table></figure><h2 id="可视模式"><a href="#可视模式" class="headerlink" title="可视模式"></a>可视模式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">v         =&gt; 按字符移动,选中文本 </span><br><span class="line"></span><br><span class="line">V         =&gt;  按行移动,选中文本可视模式可以配合 d, y, &gt;&gt;, &lt;&lt; 实现对文本块的删除,复制,左右移动</span><br></pre></td></tr></table></figure><h2 id="跳转行"><a href="#跳转行" class="headerlink" title="跳转行"></a>跳转行</h2><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:<span class="number">12</span>       =&gt; 跳转到<span class="number">12</span>行</span><br></pre></td></tr></table></figure><h2 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h2><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/the</span>  <span class="comment">搜索the</span> <span class="comment">（如果搜索出多个匹配，可按n键到下一个</span><span class="string">,</span><span class="comment">N则切换到上一个）</span></span><br></pre></td></tr></table></figure><h2 id="退出"><a href="#退出" class="headerlink" title="退出"></a>退出</h2><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">wq        =&gt; 保存退出</span><br><span class="line"></span><br><span class="line">q         =&gt; 退出</span><br><span class="line"></span><br><span class="line">q!        =&gt; 强制退出 </span><br><span class="line"></span><br><span class="line">ctrl+Z    =&gt; 临时退出vim 页面   </span><br><span class="line"></span><br><span class="line">fg        =&gt; 返回临时退出的页面</span><br></pre></td></tr></table></figure><h2 id="替换操作"><a href="#替换操作" class="headerlink" title="替换操作"></a>替换操作</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">r         =&gt; 替换当前字符</span><br><span class="line"></span><br><span class="line">R         =&gt; 替换当前行光标后的字符</span><br></pre></td></tr></table></figure><h2 id="查找命令"><a href="#查找命令" class="headerlink" title="查找命令"></a>查找命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">/:         =&gt; str 查找</span><br><span class="line"></span><br><span class="line">n          =&gt; 下一个</span><br><span class="line"></span><br><span class="line">N          =&gt; 上一个</span><br></pre></td></tr></table></figure><h2 id="替换命令"><a href="#替换命令" class="headerlink" title="替换命令"></a>替换命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">末行模式下，将光标所在行的abc替换成123</span><br><span class="line"></span><br><span class="line">:%s/abc/123/g</span><br><span class="line"></span><br><span class="line">末行模式下，将第一行至第10行之间的abc替换成123</span><br><span class="line"></span><br><span class="line">:1, 10s/abc/123/g</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;切换命令需先按ESC键&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;编辑-插入-模式&quot;&gt;&lt;a href=&quot;#编辑-插入-模式&quot; class=&quot;headerlink&quot; title=&quot;编辑(插入)模式&quot;&gt;&lt;/a&gt;编辑(插入)模式&lt;/h2&gt;
    
    </summary>
    
      <category term="vi" scheme="http://hadronw.com/categories/vi/"/>
    
    
      <category term="vi" scheme="http://hadronw.com/tags/vi/"/>
    
  </entry>
  
  <entry>
    <title>Linux中安装Maven &amp; Ant</title>
    <link href="http://hadronw.com/2018/04-22/Linux%E4%B8%AD%E5%AE%89%E8%A3%85Maven-Ant/"/>
    <id>http://hadronw.com/2018/04-22/Linux中安装Maven-Ant/</id>
    <published>2018-04-22T05:43:24.000Z</published>
    <updated>2018-05-27T13:51:20.152Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Linux中安装Maven"><a href="#Linux中安装Maven" class="headerlink" title="Linux中安装Maven"></a>Linux中安装Maven</h2><hr><h3 id="下载Maven安装包"><a href="#下载Maven安装包" class="headerlink" title="下载Maven安装包"></a>下载Maven安装包</h3><p>Maven apache官方下载<a href="http://maven.apache.org/bindownload.cgi" target="_blank" rel="noopener">http://maven.apache.org/bindownload.cgi</a><br><a id="more"></a><br><a href="https://mirrors.aliyun.com/apache/maven/" target="_blank" rel="noopener">阿里云镜像</a></p><p>下载:apache-maven-x.x.x-bin.tar.gz 到Linux 常用文件保存目录,如/home/soft</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="title">@test</span> soft]# tar zxvf apache-maven-<span class="keyword">x</span>.<span class="keyword">x</span>.<span class="keyword">x</span>-bin.tar.gz -C /home/modules</span><br></pre></td></tr></table></figure><p>tar zxvf xxx -C xxxx 压缩包解压到 xxx 目录</p><h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><p>[root@test modules]# vi /etc/profile </p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">MAVEN_HOME</span>=/home/modules/apache-maven-3.5.3</span><br><span class="line"><span class="builtin-name">export</span> MAVEN_HOME</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="variable">$&#123;PATH&#125;</span>:$&#123;MAVEN_HOME&#125;/bin</span><br></pre></td></tr></table></figure><h3 id="刷新配置文件"><a href="#刷新配置文件" class="headerlink" title="刷新配置文件"></a>刷新配置文件</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@test</span> modules]<span class="meta"># source /etc/profile</span></span><br></pre></td></tr></table></figure><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@test modules]# mvn -v</span><br><span class="line"></span><br><span class="line">Apache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-25T03:49:05+08:00)</span><br><span class="line">Maven home: /home/modules/apache-maven-3.5.3</span><br><span class="line">Java version: 1.8.0_151, vendor: Oracle Corporation</span><br><span class="line">Java home: /home/modules/jdk1.8.0_151/jre</span><br><span class="line">Default locale: zh_CN, platform encoding: UTF-8</span><br><span class="line">OS name: <span class="string">"linux"</span>, version: <span class="string">"3.10.0-693.2.2.el7.x86_64"</span>, arch: <span class="string">"amd64"</span>, family: <span class="string">"unix"</span></span><br></pre></td></tr></table></figure><h2 id="Linux中安装Ant"><a href="#Linux中安装Ant" class="headerlink" title="Linux中安装Ant"></a>Linux中安装Ant</h2><hr><h3 id="下载Ant安装包"><a href="#下载Ant安装包" class="headerlink" title="下载Ant安装包"></a>下载Ant安装包</h3><p>Ant apache官方下载<a href="http://ant.apache.org/bindownload.cgi" target="_blank" rel="noopener">http://ant.apache.org/bindownload.cgi</a></p><p><a href="https://mirrors.aliyun.com/apache/ant/binaries/" target="_blank" rel="noopener">阿里云镜像</a></p><p>下载:apache-ant-x.x.x-bin.tar.gz 到Linux 常用文件保存目录,如/home/soft</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="title">@test</span> soft]# tar zxvf apache-ant-<span class="keyword">x</span>.<span class="keyword">x</span>.<span class="keyword">x</span>-bin.tar.gz -C /home/modules</span><br></pre></td></tr></table></figure><p>tar zxvf xxx -C xxxx 压缩包解压到 xxx 目录</p><h3 id="配置环境变量-1"><a href="#配置环境变量-1" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><p>[root@test modules]# vi /etc/profile </p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">export</span> <span class="attribute">ANT_HOME</span>=/home/modules/apache-ant-1.9.11</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="variable">$PATH</span>:$ANT_HOME/bin</span><br></pre></td></tr></table></figure><h3 id="刷新配置文件-1"><a href="#刷新配置文件-1" class="headerlink" title="刷新配置文件"></a>刷新配置文件</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@test</span> modules]<span class="meta"># source /etc/profile</span></span><br></pre></td></tr></table></figure><h3 id="验证-1"><a href="#验证-1" class="headerlink" title="验证"></a>验证</h3><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@test modules]<span class="comment"># ant -version</span></span><br><span class="line">Apache Ant(TM) <span class="built_in">version</span> <span class="number">1.9</span><span class="number">.11</span> compiled <span class="keyword">on</span> March <span class="number">23</span> <span class="number">2018</span></span><br></pre></td></tr></table></figure><p>[root@a0 modules]# ant -version<br>Apache Ant(TM) version 1.9.11 compiled on March 23 2018</p><p>至此，Linux中Maven，Ant成功安装</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Linux中安装Maven&quot;&gt;&lt;a href=&quot;#Linux中安装Maven&quot; class=&quot;headerlink&quot; title=&quot;Linux中安装Maven&quot;&gt;&lt;/a&gt;Linux中安装Maven&lt;/h2&gt;&lt;hr&gt;
&lt;h3 id=&quot;下载Maven安装包&quot;&gt;&lt;a href=&quot;#下载Maven安装包&quot; class=&quot;headerlink&quot; title=&quot;下载Maven安装包&quot;&gt;&lt;/a&gt;下载Maven安装包&lt;/h3&gt;&lt;p&gt;Maven apache官方下载&lt;a href=&quot;http://maven.apache.org/bindownload.cgi&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://maven.apache.org/bindownload.cgi&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://hadronw.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://hadronw.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Hbase shell 中命令缺少单引号无法正常使用解决方案</title>
    <link href="http://hadronw.com/2018/03-30/Hbase-shell-%E4%B8%AD%E5%91%BD%E4%BB%A4%E7%BC%BA%E5%B0%91%E5%8D%95%E5%BC%95%E5%8F%B7%E6%97%A0%E6%B3%95%E6%AD%A3%E5%B8%B8%E4%BD%BF%E7%94%A8%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>http://hadronw.com/2018/03-30/Hbase-shell-中命令缺少单引号无法正常使用解决方案/</id>
    <published>2018-03-30T09:18:56.000Z</published>
    <updated>2018-05-27T13:51:20.148Z</updated>
    
    <content type="html"><![CDATA[<p>在hbase shell 操作过程中，命令缺少了单引号时候，会出现无法正确执行的情况，如下：<br><a id="more"></a><br><img src="/2018/03-30/Hbase-shell-中命令缺少单引号无法正常使用解决方案/00.jpg" title="问题图片"></p><p>出现了以上情况，往后的命令即使正确也无法执行。怎么办？</p><h2 id="简单粗暴的方式"><a href="#简单粗暴的方式" class="headerlink" title="简单粗暴的方式"></a>简单粗暴的方式</h2><p>通常软件设置的推出快捷键方式为：CTRL+C,【有些会有列外，如无法成功退出，可搜索退出的正确快捷按键】。</p><p>退出之后，再重新进入Hbase shell 操作命令即可</p><p>遇到了无法解决问题，退出再重新打开，这是最粗暴的方式。当然了，适用范围也广。</p><p>当然了这样操作是有风险的，会导致前面未曾保存的数据丢失。需要操作者权衡利弊！</p><p>有没有简单的，或者说自带操作？看下文…… </p><h2 id="温柔的方式"><a href="#温柔的方式" class="headerlink" title="温柔的方式"></a>温柔的方式</h2><p>看图</p><img src="/2018/03-30/Hbase-shell-中命令缺少单引号无法正常使用解决方案/02.jpg" title="解决"><p>非常简单的解决方案，再次输入一个’——单引号，又可以正常使用了</p><p>ps：Google找了一下，居然没有找到方案，不知道是问题太低级了，还是搜索的方式不对</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在hbase shell 操作过程中，命令缺少了单引号时候，会出现无法正确执行的情况，如下：&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Hadoop" scheme="http://hadronw.com/categories/Hadoop/"/>
    
    
      <category term="Hadoop" scheme="http://hadronw.com/tags/Hadoop/"/>
    
  </entry>
  
  <entry>
    <title>Mac中使用SSH连接服务器中断问题</title>
    <link href="http://hadronw.com/2018/03-28/Mac%E4%B8%AD%E4%BD%BF%E7%94%A8SSH%E8%BF%9E%E6%8E%A5%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%AD%E6%96%AD%E9%97%AE%E9%A2%98/"/>
    <id>http://hadronw.com/2018/03-28/Mac中使用SSH连接服务器中断问题/</id>
    <published>2018-03-28T04:24:15.000Z</published>
    <updated>2018-05-27T13:51:20.188Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Mac中iterm2使用SSH连接服务器时，会出现与服务器中断/无响应的问题。</p></blockquote><p>主要原因是：是服务器端把空闲连接给断开了，或者是网络断开</p><p>iterm2/terminal 使用SSH命令连接服务器过程中会定时发送心跳以确定是否客服端与服务端是否连接。</p><a id="more"></a><p>客服端中设定的通信时间过长，服务端中也有这空闲一段时间后会断开远程连接的机制，两边任意一方没有通信请求，连接中断。</p><p>思路，修改客服端发送通信心跳间隔，或者修改服务器中的时间间隔。</p><p>解决方案：</p><ul><li>修改客服端/Mac中的SSH参数</li><li>修改服务器端中的配置</li></ul><h2 id="客服端-Mac中修改SSH参数"><a href="#客服端-Mac中修改SSH参数" class="headerlink" title="客服端/Mac中修改SSH参数"></a>客服端/Mac中修改SSH参数</h2><p>客服端中通过配置ServerAliveInterval来实现，在 ~/.ssh/config 中加入： ServerAliveInterval=30</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">vi ~/.ssh<span class="built_in">/config </span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 新增以下内容</span></span><br><span class="line"></span><br><span class="line">Host *</span><br><span class="line">    ServerAliveInterval 45</span><br></pre></td></tr></table></figure><p>ServerAliveInterval 30 #表示ssh客户端每隔30秒给远程主机发送一个no-op包，no-op是无任何操作的意思，这样远程主机就不会关闭这个SSH会话。可根据实际情况更改时间间隔</p><p>Host * 是指任意服务IP</p><h2 id="服务器端中的配置"><a href="#服务器端中的配置" class="headerlink" title="服务器端中的配置"></a>服务器端中的配置</h2><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim <span class="meta-keyword">/etc/</span>ssh/sshd_config</span><br><span class="line"></span><br><span class="line"><span class="meta"># 添加/或者解除注释</span></span><br><span class="line">ClientAliveInterval <span class="number">30</span></span><br><span class="line">ClientAliveCountMax <span class="number">6</span></span><br></pre></td></tr></table></figure><p>ClientAliveInterval表示每隔多少秒，服务器端向客户端发送心跳<br>下面的ClientAliveInterval表示上述多少次心跳无响应之后，会认为Client已经断开。<br>所以，总共允许无响应的时间是60*3=180秒</p><p>注：本文仅作为日常实践记录</p><p>参考文档：</p><p><a href="http://bluebiu.com/blog/iterm2-ssh-session-idle.html" target="_blank" rel="noopener">iTerm2中ssh保持连接不断开</a></p><p><a href="http://flygopher.me/2017/08/12/iterm2-ssh/" target="_blank" rel="noopener">iTerm2保持ssh连接不断开</a></p><p><a href="http://www.haorooms.com/post/mac_iterm2_ssh" target="_blank" rel="noopener">mac电脑iTerm2链接linux服务器断线解决方案</a></p><p><a href="http://bluebiu.com/blog/linux-ssh-session-alive.html" target="_blank" rel="noopener">Linux使用ssh超时断开连接的真正原因</a></p><p><a href="https://www.coder4.com/archives/3751" target="_blank" rel="noopener">解决SSH自动断线，无响应的问题</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Mac中iterm2使用SSH连接服务器时，会出现与服务器中断/无响应的问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;主要原因是：是服务器端把空闲连接给断开了，或者是网络断开&lt;/p&gt;
&lt;p&gt;iterm2/terminal 使用SSH命令连接服务器过程中会定时发送心跳以确定是否客服端与服务端是否连接。&lt;/p&gt;
    
    </summary>
    
      <category term="Mac" scheme="http://hadronw.com/categories/Mac/"/>
    
    
      <category term="Mac" scheme="http://hadronw.com/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>删除ambari安装的hadoop集群</title>
    <link href="http://hadronw.com/2018/03-27/%E5%88%A0%E9%99%A4ambari%E5%AE%89%E8%A3%85%E7%9A%84hadoop%E9%9B%86%E7%BE%A4/"/>
    <id>http://hadronw.com/2018/03-27/删除ambari安装的hadoop集群/</id>
    <published>2018-03-27T01:12:55.000Z</published>
    <updated>2018-05-27T13:51:20.244Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>机器环境适用于——CentOS/redhat</p></blockquote><p>注：生产环境谨慎尝试</p><h2 id="停止Ambari服务"><a href="#停止Ambari服务" class="headerlink" title="停止Ambari服务"></a>停止Ambari服务</h2><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ambari-<span class="built_in">server</span> <span class="keyword">stop</span></span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="删除hdp-repo和hdp-util-repo"><a href="#删除hdp-repo和hdp-util-repo" class="headerlink" title="删除hdp.repo和hdp-util.repo"></a>删除hdp.repo和hdp-util.repo</h2><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> /etc/yum.repos.<span class="keyword">d</span>/</span><br><span class="line"><span class="keyword">rm</span> -rf hdp*</span><br><span class="line"><span class="keyword">rm</span> -rf HDP*</span><br><span class="line"><span class="keyword">rm</span> -rf ambari*</span><br></pre></td></tr></table></figure><h2 id="删除安装包"><a href="#删除安装包" class="headerlink" title="删除安装包"></a>删除安装包</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">用yum list installed | grep HDP来检查安装的ambari的包</span><br><span class="line"></span><br><span class="line">yum <span class="builtin-name">remove</span> -y ambari-*</span><br><span class="line">yum <span class="builtin-name">remove</span> -y postgresql</span><br><span class="line"></span><br><span class="line">yum <span class="builtin-name">remove</span> -y  sqoop.noarch  </span><br><span class="line">yum <span class="builtin-name">remove</span> -y  lzo-devel.x86_64  </span><br><span class="line">yum <span class="builtin-name">remove</span> -y  hadoop-libhdfs.x86_64  </span><br><span class="line">yum <span class="builtin-name">remove</span> -y  rrdtool.x86_64  </span><br><span class="line">yum <span class="builtin-name">remove</span> -y  hbase.noarch  </span><br><span class="line">yum <span class="builtin-name">remove</span> -y  pig.noarch  </span><br><span class="line">yum <span class="builtin-name">remove</span> -y  lzo.x86_64  </span><br><span class="line">yum <span class="builtin-name">remove</span> -y  ambari-log4j.noarch  </span><br><span class="line">yum <span class="builtin-name">remove</span> -y  oozie.noarch  </span><br><span class="line">yum <span class="builtin-name">remove</span> -y  oozie-client.noarch  </span><br><span class="line">yum <span class="builtin-name">remove</span> -y  gweb.noarch  </span><br><span class="line">yum <span class="builtin-name">remove</span> -y  snappy-devel.x86_64  </span><br><span class="line">yum <span class="builtin-name">remove</span> -y  hcatalog.noarch  </span><br><span class="line">yum <span class="builtin-name">remove</span> -y  python-rrdtool.x86_64  </span><br><span class="line">yum <span class="builtin-name">remove</span> -y  nagios.x86_64  </span><br><span class="line">yum <span class="builtin-name">remove</span> -y  webhcat-tar-pig.noarch  </span><br><span class="line">yum <span class="builtin-name">remove</span> -y  snappy.x86_64  </span><br><span class="line">yum <span class="builtin-name">remove</span> -y  libconfuse.x86_64    </span><br><span class="line">yum <span class="builtin-name">remove</span> -y  webhcat-tar-hive.noarch  </span><br><span class="line">yum <span class="builtin-name">remove</span> -y  ganglia-gmetad.x86_64  </span><br><span class="line">yum <span class="builtin-name">remove</span> -y  extjs.noarch  </span><br><span class="line">yum <span class="builtin-name">remove</span> -y  hive.noarch  </span><br><span class="line">yum <span class="builtin-name">remove</span> -y  hadoop-lzo.x86_64  </span><br><span class="line">yum <span class="builtin-name">remove</span> -y  hadoop-lzo-native.x86_64  </span><br><span class="line">yum <span class="builtin-name">remove</span> -y  hadoop-native.x86_64  </span><br><span class="line">yum <span class="builtin-name">remove</span> -y  hadoop-pipes.x86_64  </span><br><span class="line">yum <span class="builtin-name">remove</span> -y  nagios-plugins.x86_64  </span><br><span class="line">yum <span class="builtin-name">remove</span> -y  hadoop.x86_64  </span><br><span class="line">yum <span class="builtin-name">remove</span> -y  zookeeper.noarch      </span><br><span class="line">yum <span class="builtin-name">remove</span> -y  hadoop-sbin.x86_64  </span><br><span class="line">yum <span class="builtin-name">remove</span> -y  ganglia-gmond.x86_64  </span><br><span class="line">yum <span class="builtin-name">remove</span> -y  libganglia.x86_64  </span><br><span class="line">yum <span class="builtin-name">remove</span> -y  perl-rrdtool.x86_64</span><br><span class="line">yum <span class="builtin-name">remove</span> -y  epel-release.noarch</span><br><span class="line">yum <span class="builtin-name">remove</span> -y  compat-readline5*</span><br><span class="line">yum <span class="builtin-name">remove</span> -y  fping.x86_64</span><br><span class="line">yum <span class="builtin-name">remove</span> -y  perl-Crypt-DES.x86_64</span><br><span class="line">yum <span class="builtin-name">remove</span> -y  exim.x86_64</span><br><span class="line">yum <span class="builtin-name">remove</span> -y ganglia-web.noarch</span><br><span class="line">yum <span class="builtin-name">remove</span> -y perl-Digest-HMAC.noarch</span><br><span class="line">yum <span class="builtin-name">remove</span> -y perl-Digest-SHA1.x86_64</span><br></pre></td></tr></table></figure><h2 id="删除快捷方式"><a href="#删除快捷方式" class="headerlink" title="删除快捷方式"></a>删除快捷方式</h2><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> /etc/alternatives</span><br><span class="line"><span class="keyword">rm</span> -rf hadoop-etc </span><br><span class="line"><span class="keyword">rm</span> -rf zookeeper-<span class="keyword">conf</span> </span><br><span class="line"><span class="keyword">rm</span> -rf hbase-<span class="keyword">conf</span> </span><br><span class="line"><span class="keyword">rm</span> -rf hadoop-<span class="keyword">log</span> </span><br><span class="line"><span class="keyword">rm</span> -rf hadoop-lib </span><br><span class="line"><span class="keyword">rm</span> -rf hadoop-default </span><br><span class="line"><span class="keyword">rm</span> -rf oozie-<span class="keyword">conf</span> </span><br><span class="line"><span class="keyword">rm</span> -rf hcatalog-<span class="keyword">conf</span> </span><br><span class="line"><span class="keyword">rm</span> -rf hive-<span class="keyword">conf</span> </span><br><span class="line"><span class="keyword">rm</span> -rf hadoop-<span class="keyword">man</span> </span><br><span class="line"><span class="keyword">rm</span> -rf sqoop-<span class="keyword">conf</span> </span><br><span class="line"><span class="keyword">rm</span> -rf hadoop-<span class="keyword">conf</span></span><br></pre></td></tr></table></figure><h2 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h2><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">userdel nagios</span> </span><br><span class="line"><span class="attribute">userdel hive</span> </span><br><span class="line"><span class="attribute">userdel ambari-qa</span> </span><br><span class="line"><span class="attribute">userdel hbase</span> </span><br><span class="line"><span class="attribute">userdel oozie</span> </span><br><span class="line"><span class="attribute">userdel hcat</span> </span><br><span class="line"><span class="attribute">userdel mapred</span> </span><br><span class="line"><span class="attribute">userdel hdfs</span> </span><br><span class="line"><span class="attribute">userdel rrdcached</span> </span><br><span class="line"><span class="attribute">userdel zookeeper</span> </span><br><span class="line"><span class="attribute">userdel mysql</span> </span><br><span class="line"><span class="attribute">userdel sqoop</span></span><br><span class="line"><span class="attribute">userdel puppet</span></span><br></pre></td></tr></table></figure><h2 id="删除文件夹"><a href="#删除文件夹" class="headerlink" title="删除文件夹"></a>删除文件夹</h2><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">rm</span> -rf /hadoop</span><br><span class="line"><span class="keyword">rm</span> -rf /etc/hadoop </span><br><span class="line"><span class="keyword">rm</span> -rf /etc/hbase </span><br><span class="line"><span class="keyword">rm</span> -rf /etc/hcatalog </span><br><span class="line"><span class="keyword">rm</span> -rf /etc/hive </span><br><span class="line"><span class="keyword">rm</span> -rf /etc/ganglia </span><br><span class="line"><span class="keyword">rm</span> -rf /etc/nagios </span><br><span class="line"><span class="keyword">rm</span> -rf /etc/oozie </span><br><span class="line"><span class="keyword">rm</span> -rf /etc/sqoop </span><br><span class="line"><span class="keyword">rm</span> -rf /etc/zookeeper </span><br><span class="line"><span class="keyword">rm</span> -rf /etc/flume   </span><br><span class="line"><span class="keyword">rm</span> -rf /etc/storm   </span><br><span class="line"><span class="keyword">rm</span> -rf /etc/hive-hcatalog  </span><br><span class="line"><span class="keyword">rm</span> -rf /etc/tez   </span><br><span class="line"><span class="keyword">rm</span> -rf /etc/falcon   </span><br><span class="line"><span class="keyword">rm</span> -rf /etc/knox   </span><br><span class="line"><span class="keyword">rm</span> -rf /etc/hive-webhcat  </span><br><span class="line"><span class="keyword">rm</span> -rf /etc/kafka   </span><br><span class="line"><span class="keyword">rm</span> -rf /etc/slider   </span><br><span class="line"><span class="keyword">rm</span> -rf /etc/storm-slider-client  </span><br><span class="line"><span class="keyword">rm</span> -rf /etc/spark   </span><br><span class="line"><span class="keyword">rm</span> -rf /<span class="keyword">var</span>/lib/ambari*</span><br><span class="line"><span class="keyword">rm</span> -rf /usr/lib/hadoop</span><br><span class="line"><span class="keyword">rm</span> -rf /usr/lib/hbase </span><br><span class="line"><span class="keyword">rm</span> -rf /usr/lib/hcatalog </span><br><span class="line"><span class="keyword">rm</span> -rf /usr/lib/hive </span><br><span class="line"><span class="keyword">rm</span> -rf /usr/lib/oozie </span><br><span class="line"><span class="keyword">rm</span> -rf /usr/lib/sqoop </span><br><span class="line"><span class="keyword">rm</span> -rf /usr/lib/zookeeper </span><br><span class="line"><span class="keyword">rm</span> -rf /<span class="keyword">var</span>/lib/hive </span><br><span class="line"><span class="keyword">rm</span> -rf /<span class="keyword">var</span>/lib/ganglia </span><br><span class="line"><span class="keyword">rm</span> -rf /<span class="keyword">var</span>/lib/oozie </span><br><span class="line"><span class="keyword">rm</span> -rf /<span class="keyword">var</span>/lib/zookeeper </span><br><span class="line"><span class="keyword">rm</span> -rf /<span class="keyword">var</span>/tmp/oozie </span><br><span class="line"><span class="keyword">rm</span> -rf /<span class="keyword">var</span>/nagios </span><br><span class="line"></span><br><span class="line"><span class="keyword">rm</span> -rf /tmp/hive </span><br><span class="line"><span class="keyword">rm</span> -rf /tmp/nagios </span><br><span class="line"><span class="keyword">rm</span> -rf /tmp/ambari-qa </span><br><span class="line"><span class="keyword">rm</span> -rf /tmp/sqoop-ambari-qa </span><br><span class="line"><span class="keyword">rm</span> -rf /hadoop/oozie </span><br><span class="line"><span class="keyword">rm</span> -rf /hadoop/zookeeper </span><br><span class="line"><span class="keyword">rm</span> -rf /hadoop/mapred </span><br><span class="line"><span class="keyword">rm</span> -rf /hadoop/hdfs </span><br><span class="line"></span><br><span class="line"><span class="keyword">rm</span> -rf /tmp/hadoop-hive </span><br><span class="line"><span class="keyword">rm</span> -rf /tmp/hadoop-nagios </span><br><span class="line"><span class="keyword">rm</span> -rf /tmp/hadoop-hcat </span><br><span class="line"><span class="keyword">rm</span> -rf /tmp/hadoop-ambari-qa </span><br><span class="line"><span class="keyword">rm</span> -rf /tmp/hsperfdata_hbase </span><br><span class="line"><span class="keyword">rm</span> -rf /tmp/hsperfdata_hive </span><br><span class="line"><span class="keyword">rm</span> -rf /tmp/hsperfdata_nagios </span><br><span class="line"><span class="keyword">rm</span> -rf /tmp/hsperfdata_oozie </span><br><span class="line"><span class="keyword">rm</span> -rf /tmp/hsperfdata_zookeeper </span><br><span class="line"><span class="keyword">rm</span> -rf /tmp/hsperfdata_mapred </span><br><span class="line"><span class="keyword">rm</span> -rf /tmp/hsperfdata_hdfs </span><br><span class="line"><span class="keyword">rm</span> -rf /tmp/hsperfdata_hcat </span><br><span class="line"><span class="keyword">rm</span> -rf /tmp/hsperfdata_ambari-qa</span><br><span class="line"></span><br><span class="line"><span class="keyword">rm</span> -rf /<span class="keyword">var</span>/<span class="keyword">run</span>/hadoop </span><br><span class="line"><span class="keyword">rm</span> -rf /<span class="keyword">var</span>/<span class="keyword">run</span>/hbase </span><br><span class="line"><span class="keyword">rm</span> -rf /<span class="keyword">var</span>/<span class="keyword">run</span>/hive </span><br><span class="line"><span class="keyword">rm</span> -rf /<span class="keyword">var</span>/<span class="keyword">run</span>/ganglia </span><br><span class="line"><span class="keyword">rm</span> -rf /<span class="keyword">var</span>/<span class="keyword">run</span>/nagios </span><br><span class="line"><span class="keyword">rm</span> -rf /<span class="keyword">var</span>/<span class="keyword">run</span>/oozie</span><br><span class="line"><span class="keyword">rm</span> -rf /<span class="keyword">var</span>/<span class="keyword">run</span>/zookeeper</span><br><span class="line"><span class="keyword">rm</span> -rf /<span class="keyword">var</span>/<span class="keyword">run</span>/spark  </span><br><span class="line"><span class="keyword">rm</span> -rf /<span class="keyword">var</span>/<span class="keyword">run</span>/hadoop  </span><br><span class="line"><span class="keyword">rm</span> -rf /<span class="keyword">var</span>/<span class="keyword">run</span>/hbase  </span><br><span class="line"><span class="keyword">rm</span> -rf /<span class="keyword">var</span>/<span class="keyword">run</span>/zookeeper  </span><br><span class="line"><span class="keyword">rm</span> -rf /<span class="keyword">var</span>/<span class="keyword">run</span>/flume  </span><br><span class="line"><span class="keyword">rm</span> -rf /<span class="keyword">var</span>/<span class="keyword">run</span>/storm  </span><br><span class="line"><span class="keyword">rm</span> -rf /<span class="keyword">var</span>/<span class="keyword">run</span>/webhcat  </span><br><span class="line"><span class="keyword">rm</span> -rf /<span class="keyword">var</span>/<span class="keyword">run</span>/hadoop-yarn  </span><br><span class="line"><span class="keyword">rm</span> -rf /<span class="keyword">var</span>/<span class="keyword">run</span>/hadoop-mapreduce  </span><br><span class="line"><span class="keyword">rm</span> -rf /<span class="keyword">var</span>/<span class="keyword">run</span>/kafka  </span><br><span class="line"><span class="keyword">rm</span> -rf /<span class="keyword">var</span>/<span class="keyword">log</span>/ambari*</span><br><span class="line"><span class="keyword">rm</span> -rf /<span class="keyword">var</span>/<span class="keyword">log</span>/hadoop  </span><br><span class="line"><span class="keyword">rm</span> -rf /<span class="keyword">var</span>/<span class="keyword">log</span>/hbase  </span><br><span class="line"><span class="keyword">rm</span> -rf /<span class="keyword">var</span>/<span class="keyword">log</span>/flume  </span><br><span class="line"><span class="keyword">rm</span> -rf /<span class="keyword">var</span>/<span class="keyword">log</span>/storm  </span><br><span class="line"><span class="keyword">rm</span> -rf /<span class="keyword">var</span>/<span class="keyword">log</span>/hadoop-yarn  </span><br><span class="line"><span class="keyword">rm</span> -rf /<span class="keyword">var</span>/<span class="keyword">log</span>/hadoop-mapreduce  </span><br><span class="line"><span class="keyword">rm</span> -rf /<span class="keyword">var</span>/<span class="keyword">log</span>/knox  </span><br><span class="line"><span class="keyword">rm</span> -rf /<span class="keyword">var</span>/<span class="keyword">log</span>/hadoop </span><br><span class="line"><span class="keyword">rm</span> -rf /<span class="keyword">var</span>/<span class="keyword">log</span>/hbase </span><br><span class="line"><span class="keyword">rm</span> -rf /<span class="keyword">var</span>/<span class="keyword">log</span>/hive </span><br><span class="line"><span class="keyword">rm</span> -rf /<span class="keyword">var</span>/<span class="keyword">log</span>/nagios </span><br><span class="line"><span class="keyword">rm</span> -rf /<span class="keyword">var</span>/<span class="keyword">log</span>/oozie </span><br><span class="line"><span class="keyword">rm</span> -rf /<span class="keyword">var</span>/<span class="keyword">log</span>/zookeeper</span><br></pre></td></tr></table></figure><p>至此大部分的删除完毕，还有些没有删除干净的。再次安装会检测出来，再根据提示删除</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;机器环境适用于——CentOS/redhat&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;注：生产环境谨慎尝试&lt;/p&gt;
&lt;h2 id=&quot;停止Ambari服务&quot;&gt;&lt;a href=&quot;#停止Ambari服务&quot; class=&quot;headerlink&quot; title=&quot;停止Ambari服务&quot;&gt;&lt;/a&gt;停止Ambari服务&lt;/h2&gt;&lt;figure class=&quot;highlight vbscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ambari-&lt;span class=&quot;built_in&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;stop&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://hadronw.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://hadronw.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>CentOS-7-安装Ambari-在线安装</title>
    <link href="http://hadronw.com/2018/03-26/CentOS-7-%E5%AE%89%E8%A3%85Ambari-%E5%9C%A8%E7%BA%BF%E5%AE%89%E8%A3%85/"/>
    <id>http://hadronw.com/2018/03-26/CentOS-7-安装Ambari-在线安装/</id>
    <published>2018-03-26T10:16:57.000Z</published>
    <updated>2018-05-27T13:51:20.132Z</updated>
    
    <content type="html"><![CDATA[<p>在线安装Ambari-2.6.00，安装前的准备可以看上一篇文章。本文安装的是Hortonworks版的</p><p><a href="http://hadronw.github.io/2018/03-25/CentOS-7-%E5%AE%89%E8%A3%85Ambari-%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/" target="_blank" rel="noopener">CentOS-7-安装Ambari-环境准备</a><br><a id="more"></a></p><p><a href="https://docs.hortonworks.com/HDPDocuments/Ambari/Ambari-2.6.0.0/index.html" target="_blank" rel="noopener">Hortonworks官方安装文档</a></p><h2 id="下载ambari-repo文件"><a href="#下载ambari-repo文件" class="headerlink" title="下载ambari.repo文件"></a>下载ambari.repo文件</h2><hr><p>进入到官方文档，查找到<a href="https://docs.hortonworks.com/HDPDocuments/Ambari-2.6.0.0/bk_ambari-installation/content/ambari_repositories.html" target="_blank" rel="noopener">在线安装的仓库文件链接列表</a>，选择对应的系统版本</p><p>CentOS7—— <a href="http://public-repo-1.hortonworks.com/ambari/centos7/2.x/updates/2.6.0.0/ambari.repo" target="_blank" rel="noopener">http://public-repo-1.hortonworks.com/ambari/centos7/2.x/updates/2.6.0.0/ambari.repo</a> </p><p>打开主节点a0</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wget http:<span class="comment">//public-repo-1.hortonworks.com/ambari/centos7/2.x/updates/2.6.0.0/ambari.repo</span></span><br><span class="line"></span><br><span class="line">cp ambari<span class="selector-class">.repo</span> /etc/yum<span class="selector-class">.repo</span><span class="selector-class">.d</span>/ 将ambari<span class="selector-class">.repo</span> 放入yum源根目录中用于安装</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line">wget -nv http:<span class="comment">//public-repo-1.hortonworks.com/ambari/centos7/2.x/updates/2.6.0.0/ambari.repo -O /etc/yum.repos.d/ambari.repo</span></span><br></pre></td></tr></table></figure><h2 id="重新加载检查yum源"><a href="#重新加载检查yum源" class="headerlink" title="重新加载检查yum源"></a>重新加载检查yum源</h2><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">yum repolist</span></span><br></pre></td></tr></table></figure><h2 id="安装Ambari"><a href="#安装Ambari" class="headerlink" title="安装Ambari"></a>安装Ambari</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">install</span> ambari-<span class="keyword">server</span></span><br></pre></td></tr></table></figure><h2 id="配置Ambari"><a href="#配置Ambari" class="headerlink" title="配置Ambari"></a>配置Ambari</h2><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ambari-server <span class="built_in">setup</span></span><br></pre></td></tr></table></figure><p>以下为流程：</p><h3 id="检查SELinux是否关闭，如果关闭不用操作"><a href="#检查SELinux是否关闭，如果关闭不用操作" class="headerlink" title="检查SELinux是否关闭，如果关闭不用操作"></a>检查SELinux是否关闭，如果关闭不用操作</h3><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Using</span> python  /usr/bin/python</span><br><span class="line">Setup ambari-server</span><br><span class="line"><span class="function"><span class="title">Checking</span></span> SELinux...</span><br><span class="line">SELinux status is <span class="string">'disabled'</span></span><br></pre></td></tr></table></figure><h3 id="提示是否自定义设置-输入：y"><a href="#提示是否自定义设置-输入：y" class="headerlink" title="提示是否自定义设置 输入：y"></a>提示是否自定义设置 输入：y</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Customize<span class="built_in"> user </span>account <span class="keyword">for</span> ambari-server daemon [y/n] (n)? y</span><br></pre></td></tr></table></figure><h3 id="ambari-server-账号-输入：ambari"><a href="#ambari-server-账号-输入：ambari" class="headerlink" title="ambari-server 账号 输入：ambari"></a>ambari-server 账号 输入：ambari</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Enter<span class="built_in"> user </span>account <span class="keyword">for</span> ambari-server daemon (root):ambari</span><br><span class="line">Adjusting ambari-server permissions <span class="keyword">and</span> ownership<span class="built_in">..</span>.</span><br></pre></td></tr></table></figure><p>亦可不输入</p><h3 id="检查防火墙，如果关闭则不用操作"><a href="#检查防火墙，如果关闭则不用操作" class="headerlink" title="检查防火墙，如果关闭则不用操作"></a>检查防火墙，如果关闭则不用操作</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Checking<span class="built_in"> firewall </span>status<span class="built_in">..</span>.</span><br><span class="line">Redirecting <span class="keyword">to</span> /bin/systemctl status  iptables.service</span><br></pre></td></tr></table></figure><h3 id="设置JDK-输入：3"><a href="#设置JDK-输入：3" class="headerlink" title="设置JDK 输入：3"></a>设置JDK 输入：3</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Checking JDK<span class="built_in">..</span>.</span><br><span class="line"><span class="keyword">Do</span> you want <span class="keyword">to</span> change Oracle JDK [y/n] (n)? y</span><br><span class="line">[1] Oracle JDK 1.8 + Java Cryptography Extension (JCE)<span class="built_in"> Policy </span>Files 8</span><br><span class="line">[2] Oracle JDK 1.7 + Java Cryptography Extension (JCE)<span class="built_in"> Policy </span>Files 7</span><br><span class="line">[3] Custom JDK</span><br><span class="line">==============================================================================</span><br><span class="line">Enter choice (1): 3</span><br></pre></td></tr></table></figure><p>此前环境准备中已经配置过jdk，此处选自定义，</p><h3 id="如果上面选择3自定义JDK-则需要设置JAVA-HOME"><a href="#如果上面选择3自定义JDK-则需要设置JAVA-HOME" class="headerlink" title="如果上面选择3自定义JDK,则需要设置JAVA_HOME"></a>如果上面选择3自定义JDK,则需要设置JAVA_HOME</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">WARNING: JDK must be installed on all hosts <span class="keyword">and</span> JAVA_HOME must be valid on all hosts.</span><br><span class="line">WARNING: JCE<span class="built_in"> Policy </span>files are required <span class="keyword">for</span> configuring Kerberos security. <span class="keyword">If</span> you plan <span class="keyword">to</span> use Kerberos,please make sure JCE Unlimited Strength Jurisdiction<span class="built_in"> Policy </span>Files are valid on all hosts.</span><br><span class="line">Path <span class="keyword">to</span> JAVA_HOME: /xxx/xxx/jdk1.8.0_152</span><br><span class="line">Validating JDK on Ambari Server<span class="built_in">..</span>.done.</span><br><span class="line">Completing setup<span class="built_in">..</span>.</span><br></pre></td></tr></table></figure><p>查看机器中配置的JAVA_HOME，</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo <span class="variable">$JAVA_HOME</span></span><br><span class="line"><span class="regexp">/xxx/</span>xxx<span class="regexp">/jdk1.8.0_152</span></span><br></pre></td></tr></table></figure><p>注：如果不选择自定义，注意选择1，安装1.8的jdk</p><h3 id="数据库配置-选择：y"><a href="#数据库配置-选择：y" class="headerlink" title="数据库配置  选择：y"></a>数据库配置  选择：y</h3><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Configuring database...</span><br><span class="line">Enter advanced database configuration [y/<span class="built_in">n</span>] (<span class="built_in">n</span>)? y</span><br></pre></td></tr></table></figure><h3 id="选择数据库类型-输入：3"><a href="#选择数据库类型-输入：3" class="headerlink" title="选择数据库类型 输入：3"></a>选择数据库类型 输入：3</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Configuring database<span class="built_in">..</span>.</span><br><span class="line">==============================================================================</span><br><span class="line">Choose one of the following options:</span><br><span class="line">[1] - PostgreSQL (Embedded)</span><br><span class="line">[2] - Oracle</span><br><span class="line">[3] - MySQL</span><br><span class="line">[4] - PostgreSQL</span><br><span class="line">[5] - Microsoft SQL<span class="built_in"> Server </span>(Tech Preview)</span><br><span class="line">[6] - SQL Anywhere</span><br><span class="line">==============================================================================</span><br><span class="line">Enter choice (3): 3</span><br></pre></td></tr></table></figure><p>此前，以及安装好了mysql数据库，故选择3</p><h3 id="设置数据库的具体配置信息，根据实际情况输入，如果和括号内相同，则可以直接回车"><a href="#设置数据库的具体配置信息，根据实际情况输入，如果和括号内相同，则可以直接回车" class="headerlink" title="设置数据库的具体配置信息，根据实际情况输入，如果和括号内相同，则可以直接回车"></a>设置数据库的具体配置信息，根据实际情况输入，如果和括号内相同，则可以直接回车</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Hostname (localhost): </span><br><span class="line">Port (3306): </span><br><span class="line">Database name (ambari): </span><br><span class="line">Username (ambari): </span><br><span class="line">Enter Database Password (123456):</span><br></pre></td></tr></table></figure><p>数据库名，用户名，密码可根据自己设置的填入</p><h3 id="提示必须安装MySQL-JDBC，回车结束ambari配置"><a href="#提示必须安装MySQL-JDBC，回车结束ambari配置" class="headerlink" title="提示必须安装MySQL JDBC，回车结束ambari配置"></a>提示必须安装MySQL JDBC，回车结束ambari配置</h3><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">WARNING: </span>Before starting Ambari Server, you must copy the MySQL JDBC driver JAR file to /usr/share/java.</span><br><span class="line">Press &lt;enter&gt; to continue.</span><br></pre></td></tr></table></figure><h3 id="将Ambari数据库脚本导入到数据库-如果使用自己定义的数据库，必须在启动Ambari服务之前导入Ambari的sql脚本"><a href="#将Ambari数据库脚本导入到数据库-如果使用自己定义的数据库，必须在启动Ambari服务之前导入Ambari的sql脚本" class="headerlink" title="将Ambari数据库脚本导入到数据库,如果使用自己定义的数据库，必须在启动Ambari服务之前导入Ambari的sql脚本"></a>将Ambari数据库脚本导入到数据库,如果使用自己定义的数据库，必须在启动Ambari服务之前导入Ambari的sql脚本</h3><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#用Ambari用户（上面设置的用户）登录mysql</span></span><br><span class="line">mysql -u ambari -p</span><br><span class="line">use ambari；</span><br><span class="line">source /var/<span class="class"><span class="keyword">lib</span>/<span class="title">ambari</span>-<span class="title">server</span>/<span class="title">resources</span>/<span class="title">Ambari</span>-<span class="title">DDL</span>-<span class="title">MySQL</span>-<span class="title">CREATE</span>.<span class="title">sql</span></span></span><br></pre></td></tr></table></figure><p>至此Ambari配置完毕，下面则是启动Ambari服务</p><h2 id="启动ambari"><a href="#启动ambari" class="headerlink" title="启动ambari"></a>启动ambari</h2><p>启动Amabri<br>执行启动命令，启动Ambari服务</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ambari-<span class="keyword">server</span> start</span><br></pre></td></tr></table></figure><p>启动成功后，在浏览器中输入主机点ip：xxx.xxx.xxx.xxx:8080进入Ambari管理页面，默认管理用户名：admin，密码：admin</p><img src="/2018/03-26/CentOS-7-安装Ambari-在线安装/001.jpg" title="上图则表明Ambari安装成功"><h2 id="Ambari配置集群"><a href="#Ambari配置集群" class="headerlink" title="Ambari配置集群"></a>Ambari配置集群</h2><p>登陆进去后界面如下，点击安装</p><img src="/2018/03-26/CentOS-7-安装Ambari-在线安装/002.jpg" title="初始化页面"><img src="/2018/03-26/CentOS-7-安装Ambari-在线安装/00.jpg" title="设置集群名"><img src="/2018/03-26/CentOS-7-安装Ambari-在线安装/01.jpg" title="选择安装HDP版本"><img src="/2018/03-26/CentOS-7-安装Ambari-在线安装/02.jpg" title="选择安装仓库本地/线上公共"><img src="/2018/03-26/CentOS-7-安装Ambari-在线安装/03.jpg" title="配置hosts节点信息"><img src="/2018/03-26/CentOS-7-安装Ambari-在线安装/04.jpg" title="确认"><img src="/2018/03-26/CentOS-7-安装Ambari-在线安装/05.jpg" title="检测节点有问题则需要解决才能正常安装"><img src="/2018/03-26/CentOS-7-安装Ambari-在线安装/003.jpg" title="选择要安装的服务"><img src="/2018/03-26/CentOS-7-安装Ambari-在线安装/004.jpg" title="服务Master配置"><img src="/2018/03-26/CentOS-7-安装Ambari-在线安装/005.jpg" title="服务的Slaves 和 Clients节配置"><img src="/2018/03-26/CentOS-7-安装Ambari-在线安装/006.jpg" title="服务的客制化配置"><img src="/2018/03-26/CentOS-7-安装Ambari-在线安装/007.jpg" title="显示配置信息"><img src="/2018/03-26/CentOS-7-安装Ambari-在线安装/07.jpg" title="开始安装集群"><img src="/2018/03-26/CentOS-7-安装Ambari-在线安装/08.jpg" title="安装完成"><img src="/2018/03-26/CentOS-7-安装Ambari-在线安装/09.jpg" title="集群管理页面"><p>注：线上安装不需要修改本地源，离线安装则需要新建xxx/xxx目录，需要修改本地源</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在线安装Ambari-2.6.00，安装前的准备可以看上一篇文章。本文安装的是Hortonworks版的&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://hadronw.github.io/2018/03-25/CentOS-7-%E5%AE%89%E8%A3%85Ambari-%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;CentOS-7-安装Ambari-环境准备&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://hadronw.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://hadronw.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>CentOS-7-安装Ambari-环境准备</title>
    <link href="http://hadronw.com/2018/03-25/CentOS-7-%E5%AE%89%E8%A3%85Ambari-%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/"/>
    <id>http://hadronw.com/2018/03-25/CentOS-7-安装Ambari-环境准备/</id>
    <published>2018-03-25T15:51:15.000Z</published>
    <updated>2018-05-27T13:51:20.148Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Ambari-是什么"><a href="#Ambari-是什么" class="headerlink" title="Ambari 是什么"></a>Ambari 是什么</h2><hr><p>Ambari跟Hadoop等开源软件一样，也是Apache Software Foundation 中的一个项目，<a id="more"></a> 并且是顶级项目。就Ambari的作用来说，就是创建、管理、监视 Hadoop 的集群，但是这里的Hadoop是广义，指的是Hadoop整个生态圈（例如 Hive，Hbase，Sqoop，Zookeeper 等），而并不仅是特指 Hadoop。用一句话来说，Ambari 就是为了让 Hadoop以及相关的大数据软件更容易使用的一个工具。</p><p>说到这里，大家就应该明白什么人最需要 Ambari了。那些苦苦花费好几天去安装、调试 Hadoop 的初学者是最能体会到 Ambari 的方便之处的。而且，Ambari 现在所支持的平台组件也越来越多，例如流行的 Spark，Storm 等计算框架，以及资源调度平台 YARN 等，我们都能轻松地通过 Ambari 来进行部署。</p><p>Ambari 自身也是一个分布式架构的软件，主要由两部分组成：Ambari Server 和 Ambari Agent。简单来说，用户通过 Ambari Server 通知 Ambari Agent 安装对应的软件；Agent 会定时地发送各个机器每个软件模块的状态给 Ambari Server，最终这些状态信息会呈现在 Ambari 的 GUI，方便用户了解到集群的各种状态，并进行相应的维护。</p><p>目前网上能找到两个发行版：一个是Apache的Ambari，另一个是Hortonworks的，两者区别不大</p><ul><li>Apache的<a href="https://ambari.apache.org/" target="_blank" rel="noopener">Ambari官网</a></li><li>Hortonworks的<a href="https://zh.hortonworks.com/apache/ambari/" target="_blank" rel="noopener">Ambari中文官网</a>，<a href="https://hortonworks.com/apache/ambari/" target="_blank" rel="noopener">Ambari官网</a></li></ul><h2 id="安装前的准备"><a href="#安装前的准备" class="headerlink" title="安装前的准备"></a>安装前的准备</h2><p>大于3台的服务器(虚拟机中的亦可)——最好Linux系统。<br>如：a0，a1，a2，a0为主节点，a1、a2为从节点。主节点的机器配置最好高一些。</p><p>本文假设准备好了3台服务器，都为新安装的CentOS 7系统。</p><p>前期准备：（每个节点机器都需要配置）</p><ul><li>每个节点上配置jdk</li><li>设置主机名</li><li>相互添加IP地址映射，优化DNS</li><li>节点间SSH的无密码登录</li><li>设置网络静态IP（虚拟机中设置是为了防止每次开机ip出现动态变化）</li><li>同步时间NTP</li><li>关闭防火墙、selinux</li><li>关闭transparent_hugepage</li><li>Python版本要大于或等于2.6（CentOS 7内置版本2.7）</li><li>设置最大打开文件数ulimit</li><li>配置umask</li><li>主节点安装mysql/mariadb</li></ul><h3 id="每个节点上配置jdk"><a href="#每个节点上配置jdk" class="headerlink" title="每个节点上配置jdk"></a>每个节点上配置jdk</h3><p>下载好jdk包，解压到服务器中/xxx/xxx 目录，解压后配置好环境变量</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">JAVA_HOME</span>=/xxx/xxx/xxx</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="variable">$JAVA_HOME</span>/bin:$PATH</span><br><span class="line"></span><br><span class="line">保存退出，</span><br><span class="line"></span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><h3 id="设置主机名，关闭防火墙-关闭SELinux"><a href="#设置主机名，关闭防火墙-关闭SELinux" class="headerlink" title="设置主机名，关闭防火墙,关闭SELinux"></a>设置主机名，关闭防火墙,关闭SELinux</h3><p><a href="https://hadronw.github.io/2018/03-13/CentOS-7%E8%AE%BE%E7%BD%AEhostname%EF%BC%8C%E5%85%B3%E9%97%AD%E9%98%B2%E7%81%AB%E5%A2%99/" target="_blank" rel="noopener">CentOS 7设置hostname</a></p><h3 id="相互添加IP地址映射，优化DNS，节点间SSH的无密码登录"><a href="#相互添加IP地址映射，优化DNS，节点间SSH的无密码登录" class="headerlink" title="相互添加IP地址映射，优化DNS，节点间SSH的无密码登录"></a>相互添加IP地址映射，优化DNS，节点间SSH的无密码登录</h3><p><a href="https://hadronw.github.io/2017/12-20/%E5%A4%9A%E4%B8%AALinux%E8%99%9A%E6%8B%9F%E6%9C%BASSH%E5%85%8D%E5%AF%86%E7%A0%81%E9%80%9A%E4%BF%A1%E7%9A%84%E9%85%8D%E7%BD%AE/" target="_blank" rel="noopener">Linux多个虚拟机SSH免密码通信的配置</a></p><h3 id="设置网络静态IP"><a href="#设置网络静态IP" class="headerlink" title="设置网络静态IP"></a>设置网络静态IP</h3><p><a href="https://hadronw.github.io/2017/12-19/Mac%E4%B8%8B%E9%85%8D%E7%BD%AEVM%E4%B8%ADLinux-CentOS6-5%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%BD%91%E7%BB%9C%E9%9D%99%E6%80%81IP/" target="_blank" rel="noopener">虚拟机网络静态IP</a></p><h3 id="同步时间NTP"><a href="#同步时间NTP" class="headerlink" title="同步时间NTP"></a>同步时间NTP</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">yum install ntp</span><br><span class="line">systemctl is-enabled ntpd</span><br><span class="line">systemctl <span class="builtin-name">enable</span> ntpd</span><br><span class="line">systemctl start ntpd</span><br><span class="line"></span><br><span class="line">ntpdate time1.aliyun.com</span><br><span class="line">crontab e</span><br><span class="line"> 30 02 * * *  ntpdate time1.aliyun.com</span><br></pre></td></tr></table></figure><h3 id="关闭transparent-hugepage"><a href="#关闭transparent-hugepage" class="headerlink" title="关闭transparent_hugepage"></a>关闭transparent_hugepage</h3><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">查看transparent_hugepage状态</span><br><span class="line">cat <span class="meta-keyword">/sys/</span>kernel<span class="meta-keyword">/mm/</span>transparent_hugepage/defrag</span><br><span class="line">[always] madvise never  <span class="meta"># 表示开启</span></span><br><span class="line">cat <span class="meta-keyword">/sys/</span>kernel<span class="meta-keyword">/mm/</span>transparent_hugepage/enabled</span><br><span class="line">[always] madvise never  <span class="meta"># 表示开启</span></span><br><span class="line"></span><br><span class="line">vi <span class="meta-keyword">/etc/</span>rc.d/rc.local  <span class="meta">#在文末添加</span></span><br><span class="line"></span><br><span class="line">if test -f <span class="meta-keyword">/sys/</span>kernel<span class="meta-keyword">/mm/</span>transparent_hugepage/enabled; then</span><br><span class="line"> echo never &gt; <span class="meta-keyword">/sys/</span>kernel<span class="meta-keyword">/mm/</span>transparent_hugepage/enabled</span><br><span class="line"> fi</span><br><span class="line"> if test -f <span class="meta-keyword">/sys/</span>kernel<span class="meta-keyword">/mm/</span>transparent_hugepage/defrag; then</span><br><span class="line"> echo never &gt; <span class="meta-keyword">/sys/</span>kernel<span class="meta-keyword">/mm/</span>transparent_hugepage/defrag</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">保存后退出chmod +x <span class="meta-keyword">/etc/</span>rc.d/rc.local  </span><br><span class="line">赋予chmod +x <span class="meta-keyword">/etc/</span>rc.d/rc.local文件执行权限</span><br><span class="line"></span><br><span class="line">重启系统再查看状态</span><br><span class="line"></span><br><span class="line">cat <span class="meta-keyword">/sys/</span>kernel<span class="meta-keyword">/mm/</span>transparent_hugepage/defrag</span><br><span class="line">always madvise [never]  <span class="meta"># 表示关闭</span></span><br><span class="line">cat <span class="meta-keyword">/sys/</span>kernel<span class="meta-keyword">/mm/</span>transparent_hugepage/enabled</span><br><span class="line">always madvise [never]  <span class="meta"># 表示关闭</span></span><br></pre></td></tr></table></figure><h3 id="设置最大打开文件数ulimit"><a href="#设置最大打开文件数ulimit" class="headerlink" title="设置最大打开文件数ulimit"></a>设置最大打开文件数ulimit</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ulimit</span> -Sn</span><br><span class="line"><span class="built_in">ulimit</span> -Hn <span class="comment"># 如果最大数小于10000 则重设</span></span><br><span class="line"><span class="built_in">ulimit</span> -n 10000</span><br></pre></td></tr></table></figure><h3 id="配置umask"><a href="#配置umask" class="headerlink" title="配置umask"></a>配置umask</h3><p>UMASK (用户掩码或用户文件创建掩码) 设置在 Linux 计算机上创建新文件或文件夹时授予的默认权限或基本权限。大多数 Linux 发行将022设置为默认的 umask 值。umask 值022授予对新文件或文件夹的读取、写入、执行权限755。umask 值027授予对新文件或文件夹的读取、写入、执行权限750<br>umaks # 如果不是0022，则执行以下语句</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="built_in">umask</span> 0022 &gt;&gt; /etc/profile</span><br></pre></td></tr></table></figure><h3 id="主节点安装mysql-mariadb"><a href="#主节点安装mysql-mariadb" class="headerlink" title="主节点安装mysql/mariadb"></a>主节点安装mysql/mariadb</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">install</span> mariadb-<span class="keyword">server</span></span><br><span class="line"></span><br><span class="line">yum <span class="keyword">install</span> mysql-connector-<span class="keyword">java</span> # 安装jdbc驱动</span><br><span class="line"></span><br><span class="line">systemctl <span class="keyword">start</span> mariadb</span><br><span class="line">systemctl <span class="keyword">enable</span> mariadb  #启动</span><br><span class="line"></span><br><span class="line">mysql_secure_installation  # 数据库初始化设置</span><br><span class="line"></span><br><span class="line">#首先是设置密码，会提示先输入密码</span><br><span class="line">Enter <span class="keyword">current</span> <span class="keyword">password</span> <span class="keyword">for</span> root (enter <span class="keyword">for</span> <span class="keyword">none</span>):&lt;–初次运行直接回车</span><br><span class="line">#设置密码</span><br><span class="line"><span class="keyword">Set</span> root <span class="keyword">password</span>? [Y/n] &lt;– 是否设置root用户密码，输入y并回车或直接回车</span><br><span class="line"><span class="keyword">New</span> <span class="keyword">password</span>: &lt;– 设置root用户的密码</span><br><span class="line">Re-enter <span class="keyword">new</span> <span class="keyword">password</span>: &lt;– 再输入一次你设置的密码</span><br><span class="line">#其他配置</span><br><span class="line">Remove anonymous <span class="keyword">users</span>? [Y/n] &lt;– 是否删除匿名用户，回车</span><br><span class="line"><span class="keyword">Disallow</span> root login remotely? [Y/n] &lt;–是否禁止root远程登录,回车,</span><br><span class="line">Remove <span class="keyword">test</span> <span class="keyword">database</span> <span class="keyword">and</span> <span class="keyword">access</span> <span class="keyword">to</span> it? [Y/n] &lt;– 是否删除<span class="keyword">test</span>数据库，回车</span><br><span class="line">Reload privilege <span class="keyword">tables</span> <span class="keyword">now</span>? [Y/n] &lt;– 是否重新加载权限表，回车</span><br><span class="line">#初始化MariaDB完成，接下来测试登录，输入密码能正常登陆就完成了</span><br></pre></td></tr></table></figure><p>创建ambari数据库，用户</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p  #连接数据库</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> create database ambari character <span class="built_in">set</span> utf8 ;  </span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> CREATE USER <span class="string">'ambari'</span>@<span class="string">'%'</span>IDENTIFIED BY <span class="string">'123456'</span>;</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> GRANT ALL PRIVILEGES ON *.* TO <span class="string">'ambari'</span>@<span class="string">'%'</span>;</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> FLUSH PRIVILEGES;</span></span><br></pre></td></tr></table></figure><p>如果要安装Hive，再创建Hive数据库和用户 再执行下面的语句：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> create database hive character <span class="built_in">set</span> utf8 ;  </span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> CREATE USER <span class="string">'hive'</span>@<span class="string">'%'</span>IDENTIFIED BY <span class="string">'123456'</span>;</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> GRANT ALL PRIVILEGES ON *.* TO <span class="string">'hive'</span>@<span class="string">'%'</span>;</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> FLUSH PRIVILEGES;</span></span><br></pre></td></tr></table></figure><p>至此，Ambari的准备工作就完成了</p><p>注：如果要在云上面搭建，一定要选择相同的地区，地域打击。主从节点在同一个地区！否则会出现IP连接上的错误</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Ambari-是什么&quot;&gt;&lt;a href=&quot;#Ambari-是什么&quot; class=&quot;headerlink&quot; title=&quot;Ambari 是什么&quot;&gt;&lt;/a&gt;Ambari 是什么&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;Ambari跟Hadoop等开源软件一样，也是Apache Software Foundation 中的一个项目，&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://hadronw.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://hadronw.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Mosh优化SSH连接卡顿问题</title>
    <link href="http://hadronw.com/2018/03-13/Mosh%E4%BC%98%E5%8C%96SSH%E8%BF%9E%E6%8E%A5%E5%8D%A1%E9%A1%BF%E9%97%AE%E9%A2%98/"/>
    <id>http://hadronw.com/2018/03-13/Mosh优化SSH连接卡顿问题/</id>
    <published>2018-03-13T12:55:38.000Z</published>
    <updated>2018-05-27T13:51:20.220Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>在使用SSH连接远程服务器时，因为网络等原因会产生卡顿，导致使用非常不爽。网上找到一个解决方案Mosh，本文记录一下使用过程。</p></blockquote><h2 id="Mosh是什么"><a href="#Mosh是什么" class="headerlink" title="Mosh是什么"></a>Mosh是什么</h2><hr><p><a href="https://mosh.org/" target="_blank" rel="noopener">Mosh</a>官网，是一个替代SSH的免费软件，它最大的特点是支持网络漫游和间歇性连接。<br><a id="more"></a></p><ul><li>会话的中断不会导致当前正在前端执行的命令中断，相当于你所有的操作都是在screen命令中一样在后台执行</li><li>会话在中断过后，不会立刻退出，而是启用一个计时器，当网络恢复后会自动重新连接，同时会延续之前的会话，不会重新开启一个</li></ul><h2 id="Mosh安装"><a href="#Mosh安装" class="headerlink" title="Mosh安装"></a>Mosh安装</h2><hr><p>Mosh使用需要在服务端、客户端分别安装Mosh工具，才能使用</p><h3 id="Mac安装"><a href="#Mac安装" class="headerlink" title="Mac安装"></a>Mac安装</h3><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">brew </span><span class="keyword">install </span>mosh</span><br></pre></td></tr></table></figure><h3 id="Linux安装"><a href="#Linux安装" class="headerlink" title="Linux安装"></a>Linux安装</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Debian、Ubuntu 和Mint 类似的系统中，你可以很容易地用apt-get包管理器安装</span></span><br><span class="line"></span><br><span class="line"> apt-get update</span><br><span class="line"> apt-get <span class="keyword">install</span> mosh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在基于RHEL/CentOS/Fedora的系统中，要使用yum包管理器安装mosh，你需要打开第三方的EPEL</span></span><br><span class="line"></span><br><span class="line"> yum update</span><br><span class="line"> yum <span class="keyword">install</span> mosh</span><br><span class="line"> </span><br><span class="line"> <span class="comment"># 在Fedora 22+的版本中，你需要使用dnf包管理器来安装Mosh</span></span><br><span class="line"> dnf <span class="keyword">install</span> mosh</span><br></pre></td></tr></table></figure><h2 id="Mosh使用"><a href="#Mosh使用" class="headerlink" title="Mosh使用"></a>Mosh使用</h2><hr><p>简单的使用，用mosh连接Linux服务器</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mosh root@xxx.xxx.xxx.xxx</span><br><span class="line"></span><br><span class="line">输入密码后就连接成功了,使用之后你会发现卡顿消失了</span><br><span class="line"></span><br><span class="line">输入<span class="keyword">exit</span>则退出连接</span><br></pre></td></tr></table></figure><p>以上是简单的使用，还有进阶版的使用，指定端口等。具体看官方文档</p><p>如果连接不成功，可能是防火墙的问题，可以试着从这方面着手</p><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://mosh.org/" target="_blank" rel="noopener">官方网页 https://mosh.org/</a></p><p><a href="https://meiriyitie.com/2015/05/28/mosh/" target="_blank" rel="noopener">https://meiriyitie.com/2015/05/28/mosh/</a></p><p><a href="https://www.hi-linux.com/posts/23118.html" target="_blank" rel="noopener">https://www.hi-linux.com/posts/23118.html</a></p><p><a href="http://blog.sciencenet.cn/blog-935970-856971.html" target="_blank" rel="noopener">http://blog.sciencenet.cn/blog-935970-856971.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;在使用SSH连接远程服务器时，因为网络等原因会产生卡顿，导致使用非常不爽。网上找到一个解决方案Mosh，本文记录一下使用过程。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Mosh是什么&quot;&gt;&lt;a href=&quot;#Mosh是什么&quot; class=&quot;headerlink&quot; title=&quot;Mosh是什么&quot;&gt;&lt;/a&gt;Mosh是什么&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://mosh.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Mosh&lt;/a&gt;官网，是一个替代SSH的免费软件，它最大的特点是支持网络漫游和间歇性连接。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Mac" scheme="http://hadronw.com/categories/Mac/"/>
    
    
      <category term="Mac" scheme="http://hadronw.com/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>CentOS 7设置hostname，关闭防火墙</title>
    <link href="http://hadronw.com/2018/03-13/CentOS-7%E8%AE%BE%E7%BD%AEhostname%EF%BC%8C%E5%85%B3%E9%97%AD%E9%98%B2%E7%81%AB%E5%A2%99/"/>
    <id>http://hadronw.com/2018/03-13/CentOS-7设置hostname，关闭防火墙/</id>
    <published>2018-03-13T11:27:45.000Z</published>
    <updated>2018-05-27T13:51:20.148Z</updated>
    
    <content type="html"><![CDATA[<p>Cent OS 6与CentOS7许多命令有些区别</p><h2 id="设置hostname"><a href="#设置hostname" class="headerlink" title="设置hostname"></a>设置hostname</h2><hr><h3 id="查看主机名相关的设置"><a href="#查看主机名相关的设置" class="headerlink" title="查看主机名相关的设置:"></a>查看主机名相关的设置:</h3><a id="more"></a><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">[root@test]#</span> <span class="string">hostnamectl</span></span><br><span class="line">   <span class="string">Static</span> <span class="attr">hostname:</span> <span class="string">a0</span></span><br><span class="line">         <span class="string">Icon</span> <span class="attr">name:</span> <span class="string">computer-vm</span></span><br><span class="line"><span class="attr">           Chassis:</span> <span class="string">vm</span></span><br><span class="line">        <span class="string">Machine</span> <span class="attr">ID:</span> <span class="number">01</span><span class="string">def7c99eb943af9f28735310ffc0f9</span></span><br><span class="line">           <span class="string">Boot</span> <span class="attr">ID:</span> <span class="string">b9e7b57216764c13a9a3bac5a3fc7284</span></span><br><span class="line"><span class="attr">    Virtualization:</span> <span class="string">vmware</span>   </span><br><span class="line">  <span class="string">Operating</span> <span class="attr">System:</span> <span class="string">CentOS</span> <span class="string">Linux</span> <span class="number">7</span> <span class="string">(Core)</span></span><br><span class="line">       <span class="string">CPE</span> <span class="string">OS</span> <span class="attr">Name:</span> <span class="attr">cpe:/o:centos:centos:7</span></span><br><span class="line"><span class="attr">            Kernel:</span> <span class="string">Linux</span> <span class="number">3.10</span><span class="number">.0</span><span class="bullet">-693.</span><span class="string">el7.x86_64</span></span><br><span class="line"><span class="attr">      Architecture:</span> <span class="string">x86-64</span></span><br></pre></td></tr></table></figure><p>在CentOS中有对主机名有三种定义：static[静态]、transient[瞬间]、pretty[灵活]</p><p>static：主机名也称为内核主机名，是系统在启动时从/etc/hostname自动初始化的主机名</p><p>transient：主机名是在系统运行时临时分配的主机名，例如，通过DHCP或mDNS服务器分配</p><p>注：静态主机名和瞬态主机名都遵从互联网域名同样的字符限制规则</p><p>pretty：主机名则允许使用自由形式（包括特殊/空白字符）的主机名，以展示给终端用户</p><h3 id="查看hostname"><a href="#查看hostname" class="headerlink" title="查看hostname"></a>查看hostname</h3><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@test]# hostnamectl --static   # 查看静态主机名</span><br><span class="line">test</span><br><span class="line"></span><br><span class="line">[root@test]# hostnamectl --pretty   # 查看灵活主机名</span><br><span class="line">test</span><br><span class="line"></span><br><span class="line">[root@test]# hostnamectl --transient # 查看瞬间主机名</span><br><span class="line">test</span><br></pre></td></tr></table></figure><h3 id="同时修改所有主机名"><a href="#同时修改所有主机名" class="headerlink" title="同时修改所有主机名"></a>同时修改所有主机名</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">[root@test]#</span><span class="bash"> hostnamectl <span class="built_in">set</span>-hostname test1</span></span><br><span class="line"></span><br><span class="line">查看主机名</span><br><span class="line"><span class="meta">[root@test]#</span><span class="bash"> hostnamectl --pretty   <span class="comment"># 查看灵活主机名</span></span></span><br><span class="line">test1</span><br><span class="line"></span><br><span class="line"><span class="meta">[root@test]#</span><span class="bash"> hostnamectl --transient <span class="comment"># 查看瞬间主机名</span></span></span><br><span class="line">test1</span><br></pre></td></tr></table></figure><h3 id="修改特定主机名"><a href="#修改特定主机名" class="headerlink" title="修改特定主机名"></a>修改特定主机名</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">[root@test]#</span><span class="bash"> hostnamectl --static <span class="built_in">set</span>-hostname test2 <span class="comment">#将static改为pretty、transient即修改特定的主机名</span></span></span><br></pre></td></tr></table></figure><p><strong>注：上文的修改并不会立刻出现变化，需要注销用户重新登陆或者重启机器</strong></p><h2 id="防火墙相关"><a href="#防火墙相关" class="headerlink" title="防火墙相关"></a>防火墙相关</h2><hr><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">[root@test]#</span><span class="bash"> systemctl stop firewalld.service <span class="comment">#停止firewall</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">[root@test]#</span><span class="bash"> systemctl <span class="built_in">disable</span> firewalld.service <span class="comment">#禁止firewall开机启动</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">[root@test]#</span><span class="bash">  systemctl restart iptables.service <span class="comment">#重启防火墙使配置生效</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">[root@test]#</span><span class="bash">  systemctl <span class="built_in">enable</span> iptables.service <span class="comment">#设置防火墙开机启动</span></span></span><br></pre></td></tr></table></figure><h2 id="关闭SELinux"><a href="#关闭SELinux" class="headerlink" title="关闭SELinux"></a>关闭SELinux</h2><hr><p>SELinux(Secure Enhanced Linux)安全增强的Linux是由美国国家安全局NSA针对计算机基础结构安全开发的一个全新的Linux安全策略机制。就是管理Linux的安全机制。</p><p>大多数情况SELinux都是关闭的。多数情况是没有专门的运维，或者运维懒；另一个方面就是管理设置麻烦。</p><p>对于非商业性质使用来说，选择关闭是最为便捷的选择，否则许多软件使用会出现安全机制问题。</p><h3 id="查看SELinux状态"><a href="#查看SELinux状态" class="headerlink" title="查看SELinux状态"></a>查看SELinux状态</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@test]# sestatus</span><br><span class="line">SELinux status:                 enabled</span><br><span class="line">SELinuxfs mount:                /sys/fs/selinux</span><br><span class="line">SELinux root directory:         /etc/selinux</span><br><span class="line">Loaded<span class="built_in"> policy </span>name:             targeted</span><br><span class="line">Current mode:                   enforcing</span><br><span class="line">Mode <span class="keyword">from</span><span class="built_in"> config </span>file:          enforcing</span><br><span class="line">Policy MLS status:              enabled</span><br><span class="line">Policy deny_unknown status:     allowed</span><br><span class="line">Max kernel<span class="built_in"> policy </span>version:      28</span><br></pre></td></tr></table></figure><h3 id="修改-etc-sysconfig-selinux并关闭"><a href="#修改-etc-sysconfig-selinux并关闭" class="headerlink" title="修改/etc/sysconfig/selinux并关闭"></a>修改/etc/sysconfig/selinux并关闭</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="section">[root@test]</span><span class="comment"># vi /etc/sysconfig/selinux </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑/etc/sysconfig/selinux 文件,将文件中的SELINUX=enforcing改为</span></span><br><span class="line"><span class="attr">SELINUX</span>=disabled 修改后保存退出</span><br><span class="line"></span><br><span class="line"><span class="section">[root@test]</span><span class="comment"># setenforce 0</span></span><br></pre></td></tr></table></figure><p><strong>注：修改文档后需要重启机器才能生效</strong> </p><p>重启之后，可再次查看selinux状态，</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@test]</span><span class="meta"># sestatus</span></span><br><span class="line">SELinux status:                 disabled</span><br></pre></td></tr></table></figure><p>出现以上则selinux关闭成功。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Cent OS 6与CentOS7许多命令有些区别&lt;/p&gt;
&lt;h2 id=&quot;设置hostname&quot;&gt;&lt;a href=&quot;#设置hostname&quot; class=&quot;headerlink&quot; title=&quot;设置hostname&quot;&gt;&lt;/a&gt;设置hostname&lt;/h2&gt;&lt;hr&gt;
&lt;h3 id=&quot;查看主机名相关的设置&quot;&gt;&lt;a href=&quot;#查看主机名相关的设置&quot; class=&quot;headerlink&quot; title=&quot;查看主机名相关的设置:&quot;&gt;&lt;/a&gt;查看主机名相关的设置:&lt;/h3&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://hadronw.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://hadronw.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Anaconda的安装与使用</title>
    <link href="http://hadronw.com/2018/02-08/Anaconda%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
    <id>http://hadronw.com/2018/02-08/Anaconda的安装与使用/</id>
    <published>2018-02-08T06:21:03.000Z</published>
    <updated>2018-05-27T13:51:20.128Z</updated>
    
    <content type="html"><![CDATA[<p>Python版本过多，来回切换会不太方便。尽管Python管理的工具（如：pyenv）会有很多，但Anaconda却是最为全面的。</p><p>Anaconda的优点：</p><ul><li>Anaconda跨平台，Linux、Mac、Windows都支持</li><li>提供包管理功能，支持许多Python依赖包的使用与管理</li><li>提供环境管理的功能，类似Virtualenv 解决了多个Python版本共存的问题</li></ul><a id="more"></a><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><hr><p><a href="https://www.anaconda.com/download/#macos" target="_blank" rel="noopener">Anaconda官网</a> 选择符合自己平台的版本下载Linux/Mac/Windows。官网下载的速度相对于国内会比较慢<a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/?C=N&amp;O=D" target="_blank" rel="noopener">清华镜像下载页面下载会快些</a> 包含了Anconda的各个平台的历史版本，选择自己所需要的版本下载,如下图</p><img src="/2018/02-08/Anaconda的安装与使用/00.jpg"><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><hr><p>安装，软件安装是最简单的。打开安装包，然后根据提示下一步即可。如果有不会的，可以查看官方文档，入口如下图所示。</p><img src="/2018/02-08/Anaconda的安装与使用/01.jpg"><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><hr><p>Anaconda安装好后会默认添加好环境变量，打开Terminal运行conda，如果无法运行，则需要先添加Anaconda环境变量。</p><p>打开.bashrc or .bash_profile或者其它配置文档，在文末尾添加如下：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="string">"/xxx/bin:<span class="variable">$PATH</span>"</span> # Anaconda安装的目录</span><br></pre></td></tr></table></figure><p>source刷新一下环境变量即可使用</p><h2 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h2><hr><h3 id="Anaconda的常用命令–环境管理"><a href="#Anaconda的常用命令–环境管理" class="headerlink" title="Anaconda的常用命令–环境管理"></a>Anaconda的常用命令–环境管理</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># conda的常用操作，详细的可使用 -h 命令查看</span></span><br><span class="line"></span><br><span class="line">conda <span class="builtin-name">info</span> -e  #查看已经安装的的环境</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建名为env1，版本为3.6的Python环境</span></span><br><span class="line"></span><br><span class="line">conda create --name env1 <span class="attribute">python</span>=3.6 </span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建名为env2，版本为2.7的Python环境</span></span><br><span class="line"></span><br><span class="line">conda create --name env2 <span class="attribute">python</span>=2.7</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入新建立的环境</span></span><br><span class="line"></span><br><span class="line">source activate env1 # env1为环境名</span><br><span class="line">或</span><br><span class="line">conda activate env1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 退出当前环境</span></span><br><span class="line"></span><br><span class="line">source deactivate  # 退出，进入即实现了不同环境版本的切换</span><br><span class="line">或</span><br><span class="line">conda deactivate </span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除env1环境</span></span><br><span class="line"></span><br><span class="line">conda env <span class="builtin-name">remove</span> -n env1 </span><br><span class="line">或</span><br><span class="line">conda <span class="builtin-name">remove</span> --name env1 --all</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重命名</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#将env1 环境名改为env00</span></span><br><span class="line"></span><br><span class="line">conda create --env00 --clone env1 </span><br><span class="line"></span><br><span class="line"><span class="comment"># 将env1的删除，即实现了环境的重命名</span></span><br><span class="line"></span><br><span class="line">conda <span class="builtin-name">remove</span> --name env1 --all</span><br></pre></td></tr></table></figure><h3 id="conda包管理"><a href="#conda包管理" class="headerlink" title="conda包管理"></a>conda包管理</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 更新Python</span></span><br><span class="line"></span><br><span class="line">conda update python</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 更新Anaconda应用</span></span><br><span class="line"></span><br><span class="line">conda update anaconda</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 更新conda</span></span><br><span class="line"></span><br><span class="line">conda update conda </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看已经安装的包</span></span><br><span class="line"></span><br><span class="line">conda list</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装包</span></span><br><span class="line"></span><br><span class="line">conda install matplotlib</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 更新包</span></span><br><span class="line"></span><br><span class="line">conda update matplotlib</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除包</span></span><br><span class="line"></span><br><span class="line">conda remove matplotlib</span><br></pre></td></tr></table></figure><p>好了，Anaconda的安装与基本使用介绍完毕；也可以使用它的图形页面。更多的功能等着你去发现，欢迎交流学习</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Python版本过多，来回切换会不太方便。尽管Python管理的工具（如：pyenv）会有很多，但Anaconda却是最为全面的。&lt;/p&gt;
&lt;p&gt;Anaconda的优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Anaconda跨平台，Linux、Mac、Windows都支持&lt;/li&gt;
&lt;li&gt;提供包管理功能，支持许多Python依赖包的使用与管理&lt;/li&gt;
&lt;li&gt;提供环境管理的功能，类似Virtualenv 解决了多个Python版本共存的问题&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Python" scheme="http://hadronw.com/categories/Python/"/>
    
    
      <category term="Python" scheme="http://hadronw.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>iterm2卡顿问题</title>
    <link href="http://hadronw.com/2018/02-07/iterm2%E5%8D%A1%E9%A1%BF%E9%97%AE%E9%A2%98/"/>
    <id>http://hadronw.com/2018/02-07/iterm2卡顿问题/</id>
    <published>2018-02-07T08:24:49.000Z</published>
    <updated>2018-05-27T13:51:20.228Z</updated>
    
    <content type="html"><![CDATA[<h2 id="解决zsh使用时可能卡顿"><a href="#解决zsh使用时可能卡顿" class="headerlink" title="解决zsh使用时可能卡顿"></a>解决zsh使用时可能卡顿</h2><h3 id="git原因"><a href="#git原因" class="headerlink" title="git原因"></a>git原因</h3><p>zsh 使用git时可能会卡顿，原因是oh-my-zsh主题会自动获取git信息<br><a id="more"></a><br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git<span class="built_in"> config </span>--<span class="builtin-name">add</span> oh-my-zsh.hide-dirty 1  # 禁止自动获取git信息</span><br><span class="line"></span><br><span class="line">git<span class="built_in"> config </span>--<span class="builtin-name">add</span> oh-my-zsh.hide-dirty 0 # 恢复默认</span><br></pre></td></tr></table></figure></p><h3 id="日志过多"><a href="#日志过多" class="headerlink" title="日志过多"></a>日志过多</h3><p>Apple System Log（asl）系统日志过多也会影响iterm2开启的速度</p><p>系统日志会在 /private/var/log/asl 目录中</p><p>查看 /private/var/log/asl 大小的情况</p><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">du <span class="params">-sh</span> /<span class="keyword">private</span>/<span class="built_in">var</span>/<span class="keyword">log</span>/asl   -- 查看文件所占磁盘的大小</span><br></pre></td></tr></table></figure><p>如果文件过大，将该文件夹下日志文件清空即可</p><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rm /<span class="keyword">private</span>/<span class="built_in">var</span>/<span class="keyword">log</span>/asl<span class="comment">/*.asl</span></span><br></pre></td></tr></table></figure><h3 id="替换iterm2-terminal-启动的shell"><a href="#替换iterm2-terminal-启动的shell" class="headerlink" title="替换iterm2/terminal 启动的shell"></a>替换iterm2/terminal 启动的shell</h3><p>将startup shell 从默认的 /usr/bin/login 改为 /bin/bash -l 或者 /usr/bin/zsh ，Terminal 和 iTerm 2 就可以秒开了</p><p>iterm2: 修改 Preferences → Startup: 从 Default login shell 改为 /bin/bash -l</p><p>terminal：修改 Preferences → Profiles → General → Command: 从 Login Shell 改为 /bin/bash -l</p><p>参考链接：<a href="https://superuser.com/questions/31403/how-can-i-speed-up-terminal-app-or-iterm-on-mac-osx" target="_blank" rel="noopener">https://superuser.com/questions/31403/how-can-i-speed-up-terminal-app-or-iterm-on-mac-osx</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;解决zsh使用时可能卡顿&quot;&gt;&lt;a href=&quot;#解决zsh使用时可能卡顿&quot; class=&quot;headerlink&quot; title=&quot;解决zsh使用时可能卡顿&quot;&gt;&lt;/a&gt;解决zsh使用时可能卡顿&lt;/h2&gt;&lt;h3 id=&quot;git原因&quot;&gt;&lt;a href=&quot;#git原因&quot; class=&quot;headerlink&quot; title=&quot;git原因&quot;&gt;&lt;/a&gt;git原因&lt;/h3&gt;&lt;p&gt;zsh 使用git时可能会卡顿，原因是oh-my-zsh主题会自动获取git信息&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Mac" scheme="http://hadronw.com/categories/Mac/"/>
    
    
      <category term="Mac" scheme="http://hadronw.com/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>iterm2配置</title>
    <link href="http://hadronw.com/2018/02-07/iterm2%E9%85%8D%E7%BD%AE/"/>
    <id>http://hadronw.com/2018/02-07/iterm2配置/</id>
    <published>2018-02-07T08:14:50.000Z</published>
    <updated>2018-05-27T13:51:20.228Z</updated>
    
    <content type="html"><![CDATA[<h2 id="iterm2简单的配置"><a href="#iterm2简单的配置" class="headerlink" title="iterm2简单的配置"></a>iterm2简单的配置</h2><p>本篇主要介绍iterm2的一些配置，以及搭配homebrew的使用</p><h3 id="homebrew"><a href="#homebrew" class="headerlink" title="homebrew"></a>homebrew</h3><p>是一款自由及开放源代码的软件包管理系统，用以简化Mac OS X系统上的软件安装过程</p><a id="more"></a><h4 id="安装homebrew"><a href="#安装homebrew" class="headerlink" title="安装homebrew"></a>安装homebrew</h4><p>打开terminal(终端),输入以下命令安装 homebrew</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/usr/</span>bin<span class="regexp">/ruby -e "$(curl -fsSL https:/</span><span class="regexp">/raw.githubusercontent.com/</span>Homebrew<span class="regexp">/install/m</span>aster<span class="regexp">/install)"</span></span><br></pre></td></tr></table></figure><h4 id="卸载homebrew"><a href="#卸载homebrew" class="headerlink" title="卸载homebrew"></a>卸载homebrew</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/<span class="keyword">install</span>/<span class="keyword">master</span>/<span class="keyword">uninstall</span>)<span class="string">"</span></span><br></pre></td></tr></table></figure><h4 id="安装homebrew－cask"><a href="#安装homebrew－cask" class="headerlink" title="安装homebrew－cask"></a>安装homebrew－cask</h4><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">brew </span>install caskroom/cask/<span class="keyword">brew-cask</span></span><br><span class="line"><span class="keyword">brew </span>update &amp;&amp; <span class="keyword">brew </span>upgrade <span class="keyword">brew-cask </span>&amp;&amp; <span class="keyword">brew </span> cleanup // 更新</span><br></pre></td></tr></table></figure><h4 id="使用homebrew／homebrew－cask安装软件"><a href="#使用homebrew／homebrew－cask安装软件" class="headerlink" title="使用homebrew／homebrew－cask安装软件"></a>使用homebrew／homebrew－cask安装软件</h4><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">brew </span>cask install google-chrome // 安装 Google 浏览器</span><br><span class="line"><span class="keyword">brew </span>cask/ install 软件名</span><br><span class="line">安装前可以先查看一下是否有该软件</span><br><span class="line"><span class="keyword">brew </span>cask <span class="meta">info</span> 软件名</span><br><span class="line"><span class="keyword">brew </span>cask uninstall 软件名 卸载</span><br></pre></td></tr></table></figure><p>还有其它的一些命令，具体可以看帮助</p><h3 id="brew安装iterm2"><a href="#brew安装iterm2" class="headerlink" title="brew安装iterm2"></a>brew安装iterm2</h3><h4 id="安装iterm2"><a href="#安装iterm2" class="headerlink" title="安装iterm2"></a>安装iterm2</h4><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">brew </span>cask <span class="keyword">install </span>iterm2</span><br></pre></td></tr></table></figure><h4 id="安装oh-my-zsh"><a href="#安装oh-my-zsh" class="headerlink" title="安装oh-my-zsh"></a>安装<a href="https://github.com/robbyrussell/oh-my-zsh" target="_blank" rel="noopener">oh-my-zsh</a></h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https:<span class="regexp">//gi</span>thub.com<span class="regexp">/robbyrussell/</span>oh-my-zsh<span class="regexp">/raw/m</span>aster<span class="regexp">/tools/i</span>nstall.sh | sh</span><br></pre></td></tr></table></figure><p>如果有遇到乱码的请再安装一下Menlo-Powerline or Monaco-Powerline字体补丁</p><p>安装好oh my zsh后，在<code>~/.zshrc</code>中添加如下内容，能让你用的更便捷</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ZSH_THEME=<span class="string">"agnoster"</span>  <span class="comment">#使用 agnoster 主题，很好很强大</span></span><br><span class="line">DEFAULT_USER=<span class="string">"你的用户名"</span>     <span class="comment">#增加这一项，可以隐藏掉路径前面那串用户名</span></span><br><span class="line">plugins=(git brew node npm zsh-autosuggestions zsh-syntax-highlighting zsh-completions)   <span class="comment">#自己按需把要用的 plugin 写上</span></span><br><span class="line"></span><br><span class="line">zsh-completions <span class="comment"># 命令提示</span></span><br><span class="line">zsh-syntax-highlighting <span class="comment">#语法高亮</span></span><br></pre></td></tr></table></figure><blockquote><p>基本的一些配置都有了，往后可根据自己喜好再行探索增加设置</p></blockquote><p>配置完成后，记得刷新环境变量<code>source ~/.zshrc</code></p><h3 id="Mac中的环境变量在zsh中无效的问题"><a href="#Mac中的环境变量在zsh中无效的问题" class="headerlink" title="Mac中的环境变量在zsh中无效的问题"></a>Mac中的环境变量在zsh中无效的问题</h3><p>oh-my-zsh 安装默认不会假装系统shell中配置的环境，在使用过程中可能会发现之前配置好的软件环境无法使用。原因是zsh 中未加载系统中的配置的环境文件,如下所示：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> If you come from bash you might have to change your <span class="variable">$PATH</span>.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">export</span> PATH=<span class="variable">$HOME</span>/bin:/usr/<span class="built_in">local</span>/bin:<span class="variable">$PATH</span></span></span><br></pre></td></tr></table></figure><p>.zshrc 配置文件中，默认是关闭掉的，将注释#删除即可，删除后再刷新一下.zshrc或者重启一下iterm2即可</p><p>即使解除掉注释还是可能会发生无效的，解决办法就是引用一下Mac中配置环境变量的配置文件，如过是在<code>~/.bash_profile</code> 配置的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在.zshrc 文末尾添加</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure><p>刷新.zshrc 即可</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;iterm2简单的配置&quot;&gt;&lt;a href=&quot;#iterm2简单的配置&quot; class=&quot;headerlink&quot; title=&quot;iterm2简单的配置&quot;&gt;&lt;/a&gt;iterm2简单的配置&lt;/h2&gt;&lt;p&gt;本篇主要介绍iterm2的一些配置，以及搭配homebrew的使用&lt;/p&gt;
&lt;h3 id=&quot;homebrew&quot;&gt;&lt;a href=&quot;#homebrew&quot; class=&quot;headerlink&quot; title=&quot;homebrew&quot;&gt;&lt;/a&gt;homebrew&lt;/h3&gt;&lt;p&gt;是一款自由及开放源代码的软件包管理系统，用以简化Mac OS X系统上的软件安装过程&lt;/p&gt;
    
    </summary>
    
      <category term="Mac" scheme="http://hadronw.com/categories/Mac/"/>
    
    
      <category term="Mac" scheme="http://hadronw.com/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>Mac中安装nvm</title>
    <link href="http://hadronw.com/2018/01-23/Mac%E4%B8%AD%E5%AE%89%E8%A3%85nvm/"/>
    <id>http://hadronw.com/2018/01-23/Mac中安装nvm/</id>
    <published>2018-01-23T09:48:21.000Z</published>
    <updated>2018-05-27T13:51:20.188Z</updated>
    
    <content type="html"><![CDATA[<p>最近使用hexo时，总提示配置警告，追踪排查发现是node引起的错误。查看配置文件，替换配置文件，或者重新安装一下node，最后重装解决了问题。那么问题是怎么引起的呢？本文记录一下过程。</p><ul><li>问题起因</li><li>重装过程</li></ul><a id="more"></a><h2 id="Homebrew升级包情况"><a href="#Homebrew升级包情况" class="headerlink" title="Homebrew升级包情况"></a>Homebrew升级包情况</h2><hr><p>Mac中Homebrew是一个很好用的软件包管理工具，通过它可以简化软件安装、管理的过程。<a href="http://hadronw.com/2017/06/14/Mac%E7%9A%84%E4%B8%80%E4%BA%9B%E9%85%8D%E7%BD%AE%E4%B9%8Biterm2%E7%AF%87/">一些关于brew介绍可点击查看</a>在搭建博客初期，由于hexo需要依赖git、node等依赖环境。本着方便的想法，于是使用brew安装了node。</p><p>在平时的使用中，经常会使用brew update更新软件。多次的更新过程下（其中也有node的升级），与hexo 产生了不兼容的过程。【hexo之前安装了一个最新版的，后面也没有再更新升级了】</p><p>由此可见，使用的项目需要及时维护，特别是在使用开发版/测试版软件时。软件更新后应及时检查相关项目，看看是否兼容，是否正常使用。在确定自己没有太多的时间解决使用出现的问题时，因该优先使用稳定版软件，使用稳定版软件会减少许多不必要的问题。</p><h2 id="重新安装node"><a href="#重新安装node" class="headerlink" title="重新安装node"></a>重新安装node</h2><hr><p>node的版本管理工具有n、nvm；本文使用nvm安装node。吸取之前用homebrew直接安装管理node的教训，这次的思路是，先用homebrew安装nvm，再使用nvm安装管理node。</p><h3 id="homebrew安装nvm（无法实现）"><a href="#homebrew安装nvm（无法实现）" class="headerlink" title="homebrew安装nvm（无法实现）"></a>homebrew安装nvm（无法实现）</h3><p>在使用homebrew安装好nvm后，却在使用过程中出现了</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm is <span class="keyword">not</span> compatible with the npm<span class="built_in"> config </span><span class="string">"prefix"</span> option: currently <span class="builtin-name">set</span> <span class="keyword">to</span> <span class="string">"/Users/fabian/.nvm/versions/node/v9.4.0"</span> <span class="builtin-name">Run</span> `nvm use --delete-prefix v9.4.0` <span class="keyword">to</span> unset it.</span><br></pre></td></tr></table></figure><p>根据提示解决问题，配置环境变量。再使用发现还是出现以上问题，在查找过程中发现nvm的<a href="https://github.com/creationix/nvm" target="_blank" rel="noopener">官方文档</a>说明中如下所示：</p><img src="/2018/01-23/Mac中安装nvm/001.jpg"><p>那么只能重新安装了</p><h3 id="卸载已经安装nvm"><a href="#卸载已经安装nvm" class="headerlink" title="卸载已经安装nvm"></a>卸载已经安装nvm</h3><p>为了避免覆盖安装出现不兼容问题，先把原来软件环境卸载</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">npm ls -g --depth=<span class="number">0</span> <span class="comment">#查看已经安装在全局的模块，以便删除这些全局模块后再按照不同的 node 版本重新进行全局安装 </span></span><br><span class="line"></span><br><span class="line">sudo rm -rf /usr/local/<span class="class"><span class="keyword">lib</span>/<span class="title">node_modules</span> <span class="comment">#删除全局 node_modules 目录 </span></span></span><br><span class="line"></span><br><span class="line">sudo rm /usr/local/bin/node <span class="comment">#删除 node </span></span><br><span class="line"></span><br><span class="line">cd /usr/local/bin &amp;&amp; ls -l | grep <span class="string">"../lib/node_modules/"</span> | awk <span class="string">'&#123;print $9&#125;'</span>| xargs rm <span class="comment">#删除全局 node 模块注册的软链</span></span><br></pre></td></tr></table></figure><h3 id="安装nvm"><a href="#安装nvm" class="headerlink" title="安装nvm"></a>安装nvm</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">curl -o- https:<span class="regexp">//</span>raw.githubusercontent.com<span class="regexp">/creationix/</span>nvm<span class="regexp">/v0.33.8/i</span>nstall.sh | bash</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line">wget -qO- https:<span class="regexp">//</span>raw.githubusercontent.com<span class="regexp">/creationix/</span>nvm<span class="regexp">/v0.33.8/i</span>nstall.sh | bash</span><br></pre></td></tr></table></figure><h3 id="配置nvm环境变量"><a href="#配置nvm环境变量" class="headerlink" title="配置nvm环境变量"></a>配置nvm环境变量</h3><p>在~/.bash_profile, ~/.zshrc, ~/.profile, or ~/.bashrc任意一个配置文件中配置一些nvm环境变量</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">export</span> <span class="attribute">NVM_DIR</span>=<span class="string">"<span class="variable">$HOME</span>/.nvm"</span></span><br><span class="line">[ -s <span class="string">"<span class="variable">$NVM_DIR</span>/nvm.sh"</span> ] &amp;&amp; \. <span class="string">"<span class="variable">$NVM_DIR</span>/nvm.sh"</span> # This loads nvm</span><br></pre></td></tr></table></figure><p>刷新一下环境变量，nvm –version查看一下版本</p><h3 id="安装node"><a href="#安装node" class="headerlink" title="安装node"></a>安装node</h3><p>nvm的使用命令有很多，具体的可以通过help命令查看</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm <span class="keyword">install</span> stable  <span class="comment"># 直接安装最新稳定版，不需要关注node的版本</span></span><br></pre></td></tr></table></figure><p>如果你需要使用不同的node版本，也可以通过nvm install 版本号安装指定版本。</p><p>至此hexo所需要的环境就安装完毕，接下来就是重新部署hexo，迁移之前的环境。</p><h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><p><a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="noopener">hexo官网</a></p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-<span class="keyword">cli</span></span><br></pre></td></tr></table></figure><p>相关主题，如<a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">next主题官网</a></p><p>hexo的使用配置可以看官方文档，文中如有不足之处欢迎指出。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近使用hexo时，总提示配置警告，追踪排查发现是node引起的错误。查看配置文件，替换配置文件，或者重新安装一下node，最后重装解决了问题。那么问题是怎么引起的呢？本文记录一下过程。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;问题起因&lt;/li&gt;
&lt;li&gt;重装过程&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Mac" scheme="http://hadronw.com/categories/Mac/"/>
    
    
      <category term="Mac" scheme="http://hadronw.com/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客绑定域名</title>
    <link href="http://hadronw.com/2018/01-22/hexo%E5%8D%9A%E5%AE%A2%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D/"/>
    <id>http://hadronw.com/2018/01-22/hexo博客绑定域名/</id>
    <published>2018-01-22T12:29:46.000Z</published>
    <updated>2018-05-27T13:51:20.220Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>博客搭建有一段时间，还没有申请自己的域名。于是申请、绑定，操作，本文记录一下操作的过程。</p></blockquote><a id="more"></a><p>注：搭建好后发现所有的浏览记录全部清空，访问量/访问人数从0开始。后面的同学搭建好博客后一定要记得绑定好域名。</p><p>步骤：</p><ul><li>申请域名</li><li>添加网址解析</li><li>绑定博客</li></ul><h2 id="申请域名"><a href="#申请域名" class="headerlink" title="申请域名"></a>申请域名</h2><hr><p>申请网址阿里云<a href="https://wanwang.aliyun.com/domain?spm=5176.10695662.1996646101.searchclickresult.c8346fllJNcX" target="_blank" rel="noopener">万网—阿里云旗下品牌</a></p><p>如下图所示：</p><p>选择自己的喜欢，输入域名查找【如：test】</p><p>选好之后则进入购买流程，具体操作看页面提示信息【注：看看是个人需求还是企业需求，选好之后会需要提交身份信息，需要验证。我购买时页尾有优惠信息，可根据提示获取优惠】</p><h2 id="添加网址解析"><a href="#添加网址解析" class="headerlink" title="添加网址解析"></a>添加网址解析</h2><hr><p>进入个人中心控制台，域名管理可看到购买域名列表，参考如下图：</p><p>进入解析页面，添加解析，如下图所示</p><p>可直接使用新手引导，如下图所示</p><p>至此网址解析搭建完毕，还可以继续优化，此处不涉及。</p><h2 id="绑定博客"><a href="#绑定博客" class="headerlink" title="绑定博客"></a>绑定博客</h2><hr><p>为啥还要绑定博客，添加域名网址解析时那个不算是与博客绑定吗？还需要继续配置，下面的才是重点</p><p>打开本地blog目录，进入source中。在source中创建一个CNAME文件，在文件中写入申请的域名。假设申请的为：testa.com域名 ，则在CNAME文件中填写testa.com，不需要填写其他的。</p><p>位置如下图：</p><p>创建成功后，提交到github中同步，<strong>重点！！！</strong></p><p>进入博客仓库setting选项中，找到Custom domain查看域名是否与自己配置的统一，不符合的需要修改成统一的。</p><p>至此，域名绑定完成，接着浏览器中输入自己的域名验证一下。</p><p>好了搭建完毕，欢迎交流学习。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;博客搭建有一段时间，还没有申请自己的域名。于是申请、绑定，操作，本文记录一下操作的过程。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://hadronw.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://hadronw.com/tags/hexo/"/>
    
  </entry>
  
</feed>
